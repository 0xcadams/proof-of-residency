type Committer @entity {
  id: ID!

  isActive: Boolean!
  removedAt: BigInt!

  commitments: [Commitment!]! @derivedFrom(field: "committer")
  numCommitments: BigInt!
}

type Requester @entity {
  id: ID!

  commitments: [Commitment!]! @derivedFrom(field: "requester")
  numCommitments: BigInt!

  tokens: [Token!]! @derivedFrom(field: "owner")
  numTokens: BigInt!

  tokenChallenge: [TokenChallenge!]! @derivedFrom(field: "owner")
  numTokenChallenges: BigInt!
}

type TokenChallenge @entity {
  id: ID!
  owner: Requester!
  token: Token!
}

type Token @entity {
  id: ID!
  owner: Requester!
  mintTime: BigInt!
  tokenURI: String!
}

type Commitment @entity {
  id: ID!
  committer: Committer!
  requester: Requester!
  # validAt: BigInt!
  contribution: Contribution!
}

type Contribution @entity {
  id: ID!
  value: BigInt!
  # lockedUntil: BigInt!
}
