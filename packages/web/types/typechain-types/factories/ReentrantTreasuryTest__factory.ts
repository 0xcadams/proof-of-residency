/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReentrantTreasuryTest,
  ReentrantTreasuryTestInterface,
} from "../ReentrantTreasuryTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "victim",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "HitFallback",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "country",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "commitment",
        type: "string",
      },
    ],
    name: "respondToChallenge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161091f38038061091f8339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600081519050610087816100f1565b92915050565b6000602082840312156100a3576100a26100ec565b5b60006100b184828501610078565b91505092915050565b60006100c5826100cc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fa816100ba565b811461010557600080fd5b50565b610808806101176000396000f3fe6080604052600436106100225760003560e01c806398fa22481461011d57610118565b36610118577f7d5cd9daf528e533ba8cae574873331c202235d7f9a7748ed50410618a9544b060405160405180910390a160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166398fa2248600154600260009054906101000a900461ffff1660036040518463ffffffff1660e01b81526004016100c39392919061057c565b602060405180830381600087803b1580156100dd57600080fd5b505af11580156100f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011591906103a1565b50005b600080fd5b34801561012957600080fd5b50610144600480360381019061013f91906103ce565b61015a565b6040516101519190610523565b60405180910390f35b600083600181905550816003908051906020019061017992919061024f565b5082600260006101000a81548161ffff021916908361ffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166398fa22488585856040518463ffffffff1660e01b81526004016101f49392919061053e565b602060405180830381600087803b15801561020e57600080fd5b505af1158015610222573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024691906103a1565b90509392505050565b82805461025b906106a7565b90600052602060002090601f01602090048101928261027d57600085556102c4565b82601f1061029657805160ff19168380011785556102c4565b828001600101855582156102c4579182015b828111156102c35782518255916020019190600101906102a8565b5b5090506102d191906102d5565b5090565b5b808211156102ee5760008160009055506001016102d6565b5090565b6000610305610300846105df565b6105ba565b9050828152602081018484840111156103215761032061076d565b5b61032c848285610665565b509392505050565b6000815190506103438161078d565b92915050565b600082601f83011261035e5761035d610768565b5b813561036e8482602086016102f2565b91505092915050565b600081359050610386816107a4565b92915050565b60008135905061039b816107bb565b92915050565b6000602082840312156103b7576103b6610777565b5b60006103c584828501610334565b91505092915050565b6000806000606084860312156103e7576103e6610777565b5b60006103f58682870161038c565b935050602061040686828701610377565b925050604084013567ffffffffffffffff81111561042757610426610772565b5b61043386828701610349565b9150509250925092565b61044681610641565b82525050565b600061045782610625565b6104618185610630565b9350610471818560208601610674565b61047a8161077c565b840191505092915050565b60008154610492816106a7565b61049c8186610630565b945060018216600081146104b757600181146104c9576104fc565b60ff19831686526020860193506104fc565b6104d285610610565b60005b838110156104f4578154818901526001820191506020810190506104d5565b808801955050505b50505092915050565b61050e8161064d565b82525050565b61051d8161065b565b82525050565b6000602082019050610538600083018461043d565b92915050565b60006060820190506105536000830186610514565b6105606020830185610505565b8181036040830152610572818461044c565b9050949350505050565b60006060820190506105916000830186610514565b61059e6020830185610505565b81810360408301526105b08184610485565b9050949350505050565b60006105c46105d5565b90506105d082826106d9565b919050565b6000604051905090565b600067ffffffffffffffff8211156105fa576105f9610739565b5b6106038261077c565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b60008115159050919050565b600061ffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610692578082015181840152602081019050610677565b838111156106a1576000848401525b50505050565b600060028204905060018216806106bf57607f821691505b602082108114156106d3576106d261070a565b5b50919050565b6106e28261077c565b810181811067ffffffffffffffff8211171561070157610700610739565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61079681610641565b81146107a157600080fd5b50565b6107ad8161064d565b81146107b857600080fd5b50565b6107c48161065b565b81146107cf57600080fd5b5056fea26469706673582212204836ba91ae1b3ca74ca07f0daa156195a2c4782fd1cbd0920f7db8fa0d285de764736f6c63430008070033";

type ReentrantTreasuryTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReentrantTreasuryTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReentrantTreasuryTest__factory extends ContractFactory {
  constructor(...args: ReentrantTreasuryTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ReentrantTreasuryTest";
  }

  deploy(
    victim: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ReentrantTreasuryTest> {
    return super.deploy(
      victim,
      overrides || {}
    ) as Promise<ReentrantTreasuryTest>;
  }
  getDeployTransaction(
    victim: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(victim, overrides || {});
  }
  attach(address: string): ReentrantTreasuryTest {
    return super.attach(address) as ReentrantTreasuryTest;
  }
  connect(signer: Signer): ReentrantTreasuryTest__factory {
    return super.connect(signer) as ReentrantTreasuryTest__factory;
  }
  static readonly contractName: "ReentrantTreasuryTest";
  public readonly contractName: "ReentrantTreasuryTest";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReentrantTreasuryTestInterface {
    return new utils.Interface(_abi) as ReentrantTreasuryTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReentrantTreasuryTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ReentrantTreasuryTest;
  }
}
