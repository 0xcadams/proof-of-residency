/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProofOfResidency,
  ProofOfResidencyInterface,
} from "../ProofOfResidency";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialCommitter",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialTreasury",
        type: "address",
      },
      {
        internalType: "string",
        name: "initialBaseUri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "committer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "mailingAddressId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "CommitmentCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "committer",
        type: "address",
      },
    ],
    name: "CommitterAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "committer",
        type: "address",
      },
    ],
    name: "CommitterRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "blacklistedAddress",
        type: "uint256",
      },
    ],
    name: "MailingAddressBlacklisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "PriceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newCommitter",
        type: "address",
      },
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "addCommitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mailingAddressId",
        type: "uint256",
      },
    ],
    name: "blacklistMailingAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "hashedMailingAddress",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "commitAddress",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "countryTokenCounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCommitment",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "validAt",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "commitment",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "committer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct ProofOfResidency.Commitment",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCommitmentPeriodIsUpcoming",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCommitmentPeriodIsValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "mailingAddressCounts",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "country",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "commitment",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projectTreasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "removedCommitter",
        type: "address",
      },
    ],
    name: "removeCommitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reservePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseUri",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "setProjectTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620035003803806200350083398101604081905262000034916200039f565b604080518082018252601b81527f50726f6f66206f66205265736964656e63792050726f746f636f6c00000000006020808301918252835180850190945260048452630504f52560e41b908401528151919291839183916200009991600091620002dc565b508051620000af906001906020840190620002dc565b5050600a805460ff1916905550620000cb9150339050620001e8565b6001600b55600d80546001600160a01b0319166001600160a01b038516179055600c819055815162000105906015906020850190620002dc565b506001600160a01b03848116600090815260106020526040902080546001600160a01b0319169185169190911790557f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6200015f62000242565b805160209182012060408051808201825260018152603160f81b90840152805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160408051601f19818403018152919052805160209091012060805250620004fc92505050565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6060600080546200025390620004a9565b80601f01602080910402602001604051908101604052809291908181526020018280546200028190620004a9565b8015620002d25780601f10620002a657610100808354040283529160200191620002d2565b820191906000526020600020905b815481529060010190602001808311620002b457829003601f168201915b5050505050905090565b828054620002ea90620004a9565b90600052602060002090601f0160209004810192826200030e576000855562000359565b82601f106200032957805160ff191683800117855562000359565b8280016001018555821562000359579182015b82811115620003595782518255916020019190600101906200033c565b50620003679291506200036b565b5090565b5b808211156200036757600081556001016200036c565b80516001600160a01b03811681146200039a57600080fd5b919050565b60008060008060808587031215620003b657600080fd5b620003c18562000382565b93506020620003d281870162000382565b60408701519094506001600160401b0380821115620003f057600080fd5b818801915088601f8301126200040557600080fd5b8151818111156200041a576200041a620004e6565b604051601f8201601f19908116603f01168101908382118183101715620004455762000445620004e6565b816040528281528b868487010111156200045e57600080fd5b600093505b8284101562000482578484018601518185018701529285019262000463565b82841115620004945760008684830101525b60609a909a0151989b979a5050505050505050565b600181811c90821680620004be57607f821691505b60208210811415620004e057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b608051612fe8620005186000396000611faa0152612fe86000f3fe6080604052600436106102465760003560e01c806370a082311161013957806395d89b41116100b6578063c87b56dd1161007a578063c87b56dd14610782578063db2e1eed146107a2578063dcd2a602146107b8578063e8a3d485146107d8578063e985e9c5146107ed578063f2fde38b1461083657600080fd5b806395d89b41146106ce578063a22cb465146106e3578063b88d4fde14610703578063bf1264561461071e578063c3d0c4591461076257600080fd5b80637ecebe00116100fd5780637ecebe001461061c5780638456cb59146106495780638da5cb5b1461065e57806391b7f5ed1461068157806393c6ad32146106a157600080fd5b806370a082311461059f578063715018a6146105bf578063752edb9d146105d4578063792dfbeb146105f457806379702a0f1461060757600080fd5b80633ccfd60b116101c75780634f6ccce71161018b5780634f6ccce71461050757806355f804b3146105275780635c975abb146105475780636352211e1461055f5780636a1db9f71461057f57600080fd5b80633ccfd60b1461043a5780633f4ba83a1461044f57806342842e0e1461046457806342966c68146104845780634509034f146104a457600080fd5b80631e96bb9e1161020e5780631e96bb9e1461031b57806323b872dd1461033b5780632a79c6111461035b5780632f745c59146103fa57806334702f031461041a57600080fd5b806301ffc9a71461024b57806306fdde0314610280578063081812fc146102a2578063095ea7b3146102da57806318160ddd146102fc575b600080fd5b34801561025757600080fd5b5061026b610266366004612b26565b610856565b60405190151581526020015b60405180910390f35b34801561028c57600080fd5b50610295610867565b6040516102779190612d1a565b3480156102ae57600080fd5b506102c26102bd366004612bfe565b6108f9565b6040516001600160a01b039091168152602001610277565b3480156102e657600080fd5b506102fa6102f5366004612afc565b610993565b005b34801561030857600080fd5b506008545b604051908152602001610277565b34801561032757600080fd5b506102fa61033636600461295a565b610aa9565b34801561034757600080fd5b506102fa6103563660046129a8565b610b41565b34801561036757600080fd5b5060408051608080820183526000808352602080840182905283850182905260609384018290523382526012815290849020845180840186528154808252600183015482850190815260028401546001600160a01b03908116848a019081526003909501549388019384528851928352905194820194909452915190921694810194909452519183019190915201610277565b34801561040657600080fd5b5061030d610415366004612afc565b610ba1565b34801561042657600080fd5b506102fa61043536600461295a565b610c37565b34801561044657600080fd5b506102fa610cb6565b34801561045b57600080fd5b506102fa610eb2565b34801561047057600080fd5b506102fa61047f3660046129a8565b610eec565b34801561049057600080fd5b506102fa61049f366004612bfe565b610f50565b3480156104b057600080fd5b50336000908152601260209081526040918290208251608081018452815480825260018301549382019390935260028201546001600160a01b0316938101939093526003015460609092019190915242111561026b565b34801561051357600080fd5b5061030d610522366004612bfe565b610fcb565b34801561053357600080fd5b506102fa610542366004612b60565b61105e565b34801561055357600080fd5b50600a5460ff1661026b565b34801561056b57600080fd5b506102c261057a366004612bfe565b6110a5565b34801561058b57600080fd5b5061030d61059a366004612bb0565b61111c565b3480156105ab57600080fd5b5061030d6105ba36600461295a565b61144f565b3480156105cb57600080fd5b506102fa6114d6565b3480156105e057600080fd5b506102fa6105ef366004612975565b611510565b6102fa610602366004612a9c565b61159b565b34801561061357600080fd5b5061026b611880565b34801561062857600080fd5b5061030d61063736600461295a565b60146020526000908152604090205481565b34801561065557600080fd5b506102fa6118ee565b34801561066a57600080fd5b50600a5461010090046001600160a01b03166102c2565b34801561068d57600080fd5b506102fa61069c366004612bfe565b611926565b3480156106ad57600080fd5b5061030d6106bc366004612b95565b600f6020526000908152604090205481565b3480156106da57600080fd5b50610295611989565b3480156106ef57600080fd5b506102fa6106fe366004612a60565b611998565b34801561070f57600080fd5b506102fa61047f3660046129e4565b34801561072a57600080fd5b5061074f610739366004612bfe565b600e6020526000908152604090205461ffff1681565b60405161ffff9091168152602001610277565b34801561076e57600080fd5b50600d546102c2906001600160a01b031681565b34801561078e57600080fd5b5061029561079d366004612bfe565b6119a3565b3480156107ae57600080fd5b5061030d600c5481565b3480156107c457600080fd5b506102fa6107d3366004612bfe565b611a7e565b3480156107e457600080fd5b50610295611af1565b3480156107f957600080fd5b5061026b610808366004612975565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561084257600080fd5b506102fa61085136600461295a565b611b1f565b600061086182611bbd565b92915050565b60606000805461087690612ec4565b80601f01602080910402602001604051908101604052809291908181526020018280546108a290612ec4565b80156108ef5780601f106108c4576101008083540402835291602001916108ef565b820191906000526020600020905b8154815290600101906020018083116108d257829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166109775760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061099e826110a5565b9050806001600160a01b0316836001600160a01b03161415610a0c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161096e565b336001600160a01b0382161480610a285750610a288133610808565b610a9a5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161096e565b610aa48383611be2565b505050565b600a546001600160a01b03610100909104163314610ad95760405162461bcd60e51b815260040161096e90612da9565b6001600160a01b038116610b1f5760405162461bcd60e51b815260206004820152600d60248201526c4e6f6e2d30206164647265737360981b604482015260640161096e565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b60405162461bcd60e51b815260206004820152602f60248201527f4552433732314e6f6e5472616e7366657261626c653a207472616e736665724660448201526e1c9bdb481b9bdd08185b1b1bddd959608a1b606482015260840161096e565b6000610bac8361144f565b8210610c0e5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161096e565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a546001600160a01b03610100909104163314610c675760405162461bcd60e51b815260040161096e90612da9565b6001600160a01b03811660008181526010602052604080822080546001600160a01b0319169055517f117c88ce0db1154655f2e289ef1695d90636689127cff2dd8090af544cf6c2b79190a250565b6002600b541415610cd95760405162461bcd60e51b815260040161096e90612dde565b6002600b5533600090815260116020526040812054906064610cfc601484612e5e565b610d069190612e4a565b905060008111610d495760405162461bcd60e51b815260206004820152600e60248201526d0546178206e6f74206f76657220360941b604482015260640161096e565b33600090815260116020526040808220829055600d5490516001600160a01b039091169083908381818185875af1925050503d8060008114610da7576040519150601f19603f3d011682016040523d82523d6000602084013e610dac565b606091505b5050905080610dfd5760405162461bcd60e51b815260206004820152601f60248201527f556e61626c6520746f2073656e642070726f6a65637420747265617375727900604482015260640161096e565b336000908152601060205260408120546001600160a01b0316610e208486612e7d565b604051600081818185875af1925050503d8060008114610e5c576040519150601f19603f3d011682016040523d82523d6000602084013e610e61565b606091505b5050905080610ea75760405162461bcd60e51b8152602060048201526012602482015271556e61626c6520746f20776974686472617760701b604482015260640161096e565b50506001600b555050565b600a546001600160a01b03610100909104163314610ee25760405162461bcd60e51b815260040161096e90612da9565b610eea611c50565b565b60405162461bcd60e51b815260206004820152603360248201527f4552433732314e6f6e5472616e7366657261626c653a20736166655472616e7360448201527219995c919c9bdb481b9bdd08185b1b1bddd959606a1b606482015260840161096e565b610f5a3382611ce3565b610fbf5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b606482015260840161096e565b610fc881611dda565b50565b6000610fd660085490565b82106110395760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161096e565b6008828154811061104c5761104c612f70565b90600052602060002001549050919050565b600a546001600160a01b0361010090910416331461108e5760405162461bcd60e51b815260040161096e90612da9565b80516110a19060159060208401906127fd565b5050565b6000818152600260205260408120546001600160a01b0316806108615760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161096e565b600061112a600a5460ff1690565b156111475760405162461bcd60e51b815260040161096e90612d7f565b6002600b54141561116a5760405162461bcd60e51b815260040161096e90612dde565b6002600b819055336000818152601260209081526040808320815160808101835281548152600182015481850152958101546001600160a01b03168683015260030154606086015283835260148252918290205491516111cf93928892889201612cdb565b6040516020818303038152906040528051906020012081602001511461122e5760405162461bcd60e51b815260206004820152601460248201527310dbdb5b5a5d1b595b9d081a5b98dbdc9c9958dd60621b604482015260640161096e565b6112373361144f565b156112795760405162461bcd60e51b815260206004820152601260248201527120b63932b0b23c9037bbb739903a37b5b2b760711b604482015260640161096e565b80514210156112bc5760405162461bcd60e51b815260206004820152600f60248201526e10d85b9b9bdd081b5a5b9d081e595d608a1b604482015260640161096e565b80516112cc90622e248090612e32565b4211156113055760405162461bcd60e51b8152602060048201526007602482015266115e1c1a5c995960ca1b604482015260640161096e565b6040808201516001600160a01b039081166000908152601060205291909120541661136c5760405162461bcd60e51b815260206004820152601760248201527629b4b3b730ba37b93c903737b716b1b7b6b6b4ba3a32b960491b604482015260640161096e565b61137533611e81565b60608101516040808301516001600160a01b03166000908152601160205290812080549091906113a6908490612e32565b909155505061ffff84166000908152600f602052604081208054600192906113cf908490612e32565b909155505061ffff84166000818152600f602052604081205490916113fc9066038d7ea4c6800090612e5e565b6114069190612e32565b336000818152601260205260408120818155600181018290556002810180546001600160a01b0319169055600301559091506114429082611eb2565b6001600b55949350505050565b60006001600160a01b0382166114ba5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161096e565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b036101009091041633146115065760405162461bcd60e51b815260040161096e90612da9565b610eea6000611ecc565b600a546001600160a01b036101009091041633146115405760405162461bcd60e51b815260040161096e90612da9565b6001600160a01b0382811660008181526010602052604080822080546001600160a01b03191694861694909417909355915190917f77b15bf1925eb6403cdcd3a6b7df1451a6e970b6c273dd573b3b5335fef5a7f991a25050565b600a5460ff16156115be5760405162461bcd60e51b815260040161096e90612d7f565b6002600b5414156115e15760405162461bcd60e51b815260040161096e90612dde565b6002600b5560006115f6878787878787611f26565b6001600160a01b038082166000908152601060205260409020549192501661165a5760405162461bcd60e51b815260206004820152601760248201527629b4b3b730ba37b93c903737b716b1b7b6b6b4ba3a32b960491b604482015260640161096e565b600c54341461169d5760405162461bcd60e51b815260206004820152600f60248201526e496e636f72726563742076616c756560881b604482015260640161096e565b6116a68761144f565b156116e15760405162461bcd60e51b815260206004820152600b60248201526a2737b71698103a37b5b2b760a91b604482015260640161096e565b600085815260136020526040902054859060ff16156117385760405162461bcd60e51b81526020600482015260136024820152721059191c995cdcc8189b1858dadb1a5cdd1959606a1b604482015260640161096e565b6000818152600e6020526040812080546001929061175b90849061ffff16612e15565b825461ffff9182166101009390930a9283029190920219909116179055506001600160a01b0388166000908152601260205260409020600181015415806117b0575080546117ad90622e248090612e32565b42115b6117f25760405162461bcd60e51b8152602060048201526013602482015272115e1a5cdd1a5b99c818dbdb5b5a5d1b595b9d606a1b604482015260640161096e565b6002810180546001600160a01b0319166001600160a01b03851617905561181c62093a8042612e32565b81556001810188905534600382015560405188815282906001600160a01b0385811691908c16907ffacfb4f8f6a97950a243d2b59a9d270cede18185ffdc705c945bd13657e1bd0f9060200160405180910390a450506001600b5550505050505050565b3360009081526012602090815260408083208151608081018352815480825260018301549482019490945260028201546001600160a01b0316928101929092526003015460608201529042108015906118e8575080516118e490622e248090612e32565b4211155b91505090565b600a546001600160a01b0361010090910416331461191e5760405162461bcd60e51b815260040161096e90612da9565b610eea61206a565b600a546001600160a01b036101009091041633146119565760405162461bcd60e51b815260040161096e90612da9565b600c81905560405181907fa6dc15bdb68da224c66db4b3838d9a2b205138e8cff6774e57d0af91e196d62290600090a250565b60606001805461087690612ec4565b6110a13383836120c2565b6000818152600260205260409020546060906001600160a01b0316611a225760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161096e565b6000611a2c612191565b90506000815111611a4c5760405180602001604052806000815250611a77565b80611a56846121a0565b604051602001611a67929190612c43565b6040516020818303038152906040525b9392505050565b600a546001600160a01b03610100909104163314611aae5760405162461bcd60e51b815260040161096e90612da9565b600081815260136020526040808220805460ff191660011790555182917f289f515c9c4dcd7a19f8c217f529f632785054b6c4a850bb3385c032bf055cd891a250565b6060611afb612191565b604051602001611b0b9190612c72565b604051602081830303815290604052905090565b600a546001600160a01b03610100909104163314611b4f5760405162461bcd60e51b815260040161096e90612da9565b6001600160a01b038116611bb45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161096e565b610fc881611ecc565b60006001600160e01b0319821663780e9d6360e01b148061086157506108618261229e565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611c17826110a5565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600a5460ff16611c995760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161096e565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000818152600260205260408120546001600160a01b0316611d5c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161096e565b6000611d67836110a5565b9050806001600160a01b0316846001600160a01b03161480611da25750836001600160a01b0316611d97846108f9565b6001600160a01b0316145b80611dd257506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b6000611de5826110a5565b9050611df3816000846122ee565b611dfe600083611be2565b6001600160a01b0381166000908152600360205260408120805460019290611e27908490612e7d565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b0381166000908152601460205260408120805460019290611eaa908490612e32565b909155505050565b6110a182826040518060200160405280600081525061231c565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03861660008181526014602090815260408083205481517f0d74f9dcf07d4e1809238c6bb7a460e147e1035979be1c366a7a068b3236d3908185015280830195909552606085018a90526080850189905260a0808601919091528151808603909101815260c08501825280519083012061190160f01b60e08601527f000000000000000000000000000000000000000000000000000000000000000060e286015261010280860182905282518087039091018152610122860180845281519185019190912090859052610142860180845281905260ff891661016287015261018286018890526101a28601879052915193949093919285926001926101c28082019392601f1981019281900390910190855afa158015612051573d6000803e3d6000fd5b5050604051601f1901519b9a5050505050505050505050565b600a5460ff161561208d5760405162461bcd60e51b815260040161096e90612d7f565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611cc63390565b816001600160a01b0316836001600160a01b031614156121245760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161096e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60606015805461087690612ec4565b6060816121c45750506040805180820190915260018152600360fc1b602082015290565b8160005b81156121ee57806121d881612eff565b91506121e79050600a83612e4a565b91506121c8565b60008167ffffffffffffffff81111561220957612209612f86565b6040519080825280601f01601f191660200182016040528015612233576020820181803683370190505b5090505b8415611dd257612248600183612e7d565b9150612255600a86612f1a565b612260906030612e32565b60f81b81838151811061227557612275612f70565b60200101906001600160f81b031916908160001a905350612297600a86612e4a565b9450612237565b60006001600160e01b031982166380ac58cd60e01b14806122cf57506001600160e01b03198216635b5e139f60e01b145b8061086157506301ffc9a760e01b6001600160e01b0319831614610861565b600a5460ff16156123115760405162461bcd60e51b815260040161096e90612d7f565b610aa483838361234f565b612326838361235a565b61233360008484846124a8565b610aa45760405162461bcd60e51b815260040161096e90612d2d565b610aa48383836125b5565b6001600160a01b0382166123b05760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161096e565b6000818152600260205260409020546001600160a01b0316156124155760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161096e565b612421600083836122ee565b6001600160a01b038216600090815260036020526040812080546001929061244a908490612e32565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b156125aa57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906124ec903390899088908890600401612c9e565b602060405180830381600087803b15801561250657600080fd5b505af1925050508015612536575060408051601f3d908101601f1916820190925261253391810190612b43565b60015b612590573d808015612564576040519150601f19603f3d011682016040523d82523d6000602084013e612569565b606091505b5080516125885760405162461bcd60e51b815260040161096e90612d2d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611dd2565b506001949350505050565b6001600160a01b0383166126105761260b81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b612633565b816001600160a01b0316836001600160a01b03161461263357612633838261266d565b6001600160a01b03821661264a57610aa48161270a565b826001600160a01b0316826001600160a01b031614610aa457610aa482826127b9565b6000600161267a8461144f565b6126849190612e7d565b6000838152600760205260409020549091508082146126d7576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061271c90600190612e7d565b6000838152600960205260408120546008805493945090928490811061274457612744612f70565b90600052602060002001549050806008838154811061276557612765612f70565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061279d5761279d612f5a565b6001900381819060005260206000200160009055905550505050565b60006127c48361144f565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b82805461280990612ec4565b90600052602060002090601f01602090048101928261282b5760008555612871565b82601f1061284457805160ff1916838001178555612871565b82800160010185558215612871579182015b82811115612871578251825591602001919060010190612856565b5061287d929150612881565b5090565b5b8082111561287d5760008155600101612882565b600067ffffffffffffffff808411156128b1576128b1612f86565b604051601f8501601f19908116603f011681019082821181831017156128d9576128d9612f86565b816040528093508581528686860111156128f257600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b038116811461292357600080fd5b919050565b600082601f83011261293957600080fd5b611a7783833560208501612896565b803561ffff8116811461292357600080fd5b60006020828403121561296c57600080fd5b611a778261290c565b6000806040838503121561298857600080fd5b6129918361290c565b915061299f6020840161290c565b90509250929050565b6000806000606084860312156129bd57600080fd5b6129c68461290c565b92506129d46020850161290c565b9150604084013590509250925092565b600080600080608085870312156129fa57600080fd5b612a038561290c565b9350612a116020860161290c565b925060408501359150606085013567ffffffffffffffff811115612a3457600080fd5b8501601f81018713612a4557600080fd5b612a5487823560208401612896565b91505092959194509250565b60008060408385031215612a7357600080fd5b612a7c8361290c565b915060208301358015158114612a9157600080fd5b809150509250929050565b60008060008060008060c08789031215612ab557600080fd5b612abe8761290c565b95506020870135945060408701359350606087013560ff81168114612ae257600080fd5b9598949750929560808101359460a0909101359350915050565b60008060408385031215612b0f57600080fd5b612b188361290c565b946020939093013593505050565b600060208284031215612b3857600080fd5b8135611a7781612f9c565b600060208284031215612b5557600080fd5b8151611a7781612f9c565b600060208284031215612b7257600080fd5b813567ffffffffffffffff811115612b8957600080fd5b611dd284828501612928565b600060208284031215612ba757600080fd5b611a7782612948565b60008060408385031215612bc357600080fd5b612bcc83612948565b9150602083013567ffffffffffffffff811115612be857600080fd5b612bf485828601612928565b9150509250929050565b600060208284031215612c1057600080fd5b5035919050565b60008151808452612c2f816020860160208601612e94565b601f01601f19169290920160200192915050565b60008351612c55818460208801612e94565b835190830190612c69818360208801612e94565b01949350505050565b60008251612c84818460208701612e94565b6718dbdb9d1c9858dd60c21b920191825250600801919050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612cd190830184612c17565b9695505050505050565b6001600160a01b038516815261ffff84166020820152608060408201819052600090612d0990830185612c17565b905082606083015295945050505050565b602081526000611a776020830184612c17565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600061ffff808316818516808303821115612c6957612c69612f2e565b60008219821115612e4557612e45612f2e565b500190565b600082612e5957612e59612f44565b500490565b6000816000190483118215151615612e7857612e78612f2e565b500290565b600082821015612e8f57612e8f612f2e565b500390565b60005b83811015612eaf578181015183820152602001612e97565b83811115612ebe576000848401525b50505050565b600181811c90821680612ed857607f821691505b60208210811415612ef957634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415612f1357612f13612f2e565b5060010190565b600082612f2957612f29612f44565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610fc857600080fdfea26469706673582212206eb7c08b3bdb5bdc42e5fc9d04f071208f66b41fc48374850fb40e702031be1464736f6c63430008070033";

type ProofOfResidencyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProofOfResidencyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProofOfResidency__factory extends ContractFactory {
  constructor(...args: ProofOfResidencyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ProofOfResidency";
  }

  deploy(
    initialCommitter: string,
    initialTreasury: string,
    initialBaseUri: string,
    initialPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProofOfResidency> {
    return super.deploy(
      initialCommitter,
      initialTreasury,
      initialBaseUri,
      initialPrice,
      overrides || {}
    ) as Promise<ProofOfResidency>;
  }
  getDeployTransaction(
    initialCommitter: string,
    initialTreasury: string,
    initialBaseUri: string,
    initialPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialCommitter,
      initialTreasury,
      initialBaseUri,
      initialPrice,
      overrides || {}
    );
  }
  attach(address: string): ProofOfResidency {
    return super.attach(address) as ProofOfResidency;
  }
  connect(signer: Signer): ProofOfResidency__factory {
    return super.connect(signer) as ProofOfResidency__factory;
  }
  static readonly contractName: "ProofOfResidency";
  public readonly contractName: "ProofOfResidency";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProofOfResidencyInterface {
    return new utils.Interface(_abi) as ProofOfResidencyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProofOfResidency {
    return new Contract(address, _abi, signerOrProvider) as ProofOfResidency;
  }
}
