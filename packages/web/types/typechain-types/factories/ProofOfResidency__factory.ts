/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProofOfResidency,
  ProofOfResidencyInterface,
} from "../ProofOfResidency";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialCommitter",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialTreasury",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "committer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "CommitmentCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "committer",
        type: "address",
      },
    ],
    name: "CommitterAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "committer",
        type: "address",
      },
    ],
    name: "CommitterRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "PriceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "COMMITMENT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newCommitter",
        type: "address",
      },
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "addCommitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "commitAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCommitmentExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCommitmentIsReady",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "country",
        type: "uint256",
      },
    ],
    name: "getCurrentCountryCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "country",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "publicKey",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "removedCommitter",
        type: "address",
      },
    ],
    name: "removeCommitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002cd338038062002cd383398101604081905262000034916200022a565b604080518082018252601b81527f50726f6f66206f66205265736964656e63792050726f746f636f6c00000000006020808301918252835180850190945260048452630504f52560e41b90840152815191929183918391620000999160009162000167565b508051620000af90600190602084019062000167565b5050600a805460ff1916905550620000cb91503390506200010d565b6001600b556001600160a01b039182166000908152600d6020526040902080546001600160a01b03191691909216179055661c6bf526340000600c556200029f565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001759062000262565b90600052602060002090601f016020900481019282620001995760008555620001e4565b82601f10620001b457805160ff1916838001178555620001e4565b82800160010185558215620001e4579182015b82811115620001e4578251825591602001919060010190620001c7565b50620001f2929150620001f6565b5090565b5b80821115620001f25760008155600101620001f7565b80516001600160a01b03811681146200022557600080fd5b919050565b600080604083850312156200023e57600080fd5b62000249836200020d565b915062000259602084016200020d565b90509250929050565b600181811c908216806200027757607f821691505b602082108114156200029957634e487b7160e01b600052602260045260246000fd5b50919050565b612a2480620002af6000396000f3fe60806040526004361061021a5760003560e01c80636352211e1161012357806391b7f5ed116100ab578063c87b56dd1161006f578063c87b56dd14610634578063e8a3d48514610654578063e985e9c514610669578063f2fde38b146106b2578063ffa1ad74146106d257600080fd5b806391b7f5ed146105a457806395d89b41146105c4578063a22cb465146105d9578063b52831e3146105f9578063b88d4fde1461061957600080fd5b8063752edb9d116100f2578063752edb9d1461052457806377097fc81461054457806377d0b1b8146105575780638456cb591461056c5780638da5cb5b1461058157600080fd5b80636352211e146104b95780636817c76c146104d957806370a08231146104ef578063715018a61461050f57600080fd5b80632e1a7d4d116101a657806342842e0e1161017557806342842e0e1461041457806342966c68146104345780634b930201146104545780634f6ccce7146104815780635c975abb146104a157600080fd5b80632e1a7d4d1461039f5780632f745c59146103bf57806334702f03146103df5780633f4ba83a146103ff57600080fd5b8063081812fc116101ed578063081812fc146102dc578063095ea7b31461031457806318160ddd1461033657806320606b701461034b57806323b872dd1461037f57600080fd5b806301ffc9a71461021f578063030b8d281461025457806304f032731461027857806306fdde03146102ba575b600080fd5b34801561022b57600080fd5b5061023f61023a3660046125c5565b6106ff565b60405190151581526020015b60405180910390f35b34801561026057600080fd5b50336000908152600e6020526040902054151561023f565b34801561028457600080fd5b506102ac7f314da02917ab2dc1057a54f9281f1dd3e542e525b1252a0196a71db6e4f5493f81565b60405190815260200161024b565b3480156102c657600080fd5b506102cf610710565b60405161024b9190612767565b3480156102e857600080fd5b506102fc6102f73660046125ff565b6107a2565b6040516001600160a01b03909116815260200161024b565b34801561032057600080fd5b5061033461032f36600461259b565b61083c565b005b34801561034257600080fd5b506008546102ac565b34801561035757600080fd5b506102ac7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b34801561038b57600080fd5b5061033461039a366004612451565b610952565b3480156103ab57600080fd5b506103346103ba3660046125ff565b6109ab565b3480156103cb57600080fd5b506102ac6103da36600461259b565b610b98565b3480156103eb57600080fd5b506103346103fa366004612403565b610c2e565b34801561040b57600080fd5b50610334610cad565b34801561042057600080fd5b5061033461042f366004612451565b610ce7565b34801561044057600080fd5b5061033461044f3660046125ff565b610d44565b34801561046057600080fd5b506102ac61046f3660046125ff565b6000908152600f602052604090205490565b34801561048d57600080fd5b506102ac61049c3660046125ff565b610dbf565b3480156104ad57600080fd5b50600a5460ff1661023f565b3480156104c557600080fd5b506102fc6104d43660046125ff565b610e52565b3480156104e557600080fd5b506102ac600c5481565b3480156104fb57600080fd5b506102ac61050a366004612403565b610ec9565b34801561051b57600080fd5b50610334610f50565b34801561053057600080fd5b5061033461053f36600461241e565b610f8a565b6102ac610552366004612618565b611015565b34801561056357600080fd5b5061023f6112c1565b34801561057857600080fd5b506103346112e7565b34801561058d57600080fd5b50600a5461010090046001600160a01b03166102fc565b3480156105b057600080fd5b506103346105bf3660046125ff565b61131f565b3480156105d057600080fd5b506102cf611382565b3480156105e557600080fd5b506103346105f4366004612509565b611391565b34801561060557600080fd5b50610334610614366004612545565b6113a0565b34801561062557600080fd5b5061033461042f36600461248d565b34801561064057600080fd5b506102cf61064f3660046125ff565b611545565b34801561066057600080fd5b506102cf611620565b34801561067557600080fd5b5061023f61068436600461241e565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156106be57600080fd5b506103346106cd366004612403565b61164e565b3480156106de57600080fd5b506102cf604051806040016040528060018152602001603160f81b81525081565b600061070a826116ec565b92915050565b60606000805461071f906128bd565b80601f016020809104026020016040519081016040528092919081815260200182805461074b906128bd565b80156107985780601f1061076d57610100808354040283529160200191610798565b820191906000526020600020905b81548152906001019060200180831161077b57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166108205760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061084782610e52565b9050806001600160a01b0316836001600160a01b031614156108b55760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610817565b336001600160a01b03821614806108d157506108d18133610684565b6109435760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610817565b61094d8383611711565b505050565b60405162461bcd60e51b815260206004820152602860248201527f455243373231526561644f6e6c793a207472616e7366657246726f6d206e6f7460448201526708185b1b1bddd95960c21b6064820152608401610817565b336000908152600d60205260409020546001600160a01b0316610a105760405162461bcd60e51b815260206004820152601960248201527f43616c6c6572206973206e6f74206120636f6d6d6974746572000000000000006044820152606401610817565b6002600b541415610a635760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610817565b6002600b5533600090815260106020526040902054811115610ac75760405162461bcd60e51b815260206004820152601f60248201527f5769746864726177616c20616d6f756e74206e6f7420617661696c61626c65006044820152606401610817565b3360009081526010602052604081208054839290610ae6908490612876565b9091555050336000908152600d60205260408082205490516001600160a01b039091169083908381818185875af1925050503d8060008114610b44576040519150601f19603f3d011682016040523d82523d6000602084013e610b49565b606091505b5050905080610b8f5760405162461bcd60e51b8152602060048201526012602482015271556e61626c6520746f20776974686472617760701b6044820152606401610817565b50506001600b55565b6000610ba383610ec9565b8210610c055760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610817565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a546001600160a01b03610100909104163314610c5e5760405162461bcd60e51b8152600401610817906127f6565b6001600160a01b0381166000818152600d602052604080822080546001600160a01b0319169055517f117c88ce0db1154655f2e289ef1695d90636689127cff2dd8090af544cf6c2b79190a250565b600a546001600160a01b03610100909104163314610cdd5760405162461bcd60e51b8152600401610817906127f6565b610ce561177f565b565b60405162461bcd60e51b815260206004820152602c60248201527f455243373231526561644f6e6c793a20736166655472616e7366657246726f6d60448201526b081b9bdd08185b1b1bddd95960a21b6064820152608401610817565b610d4e3382611812565b610db35760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b6064820152608401610817565b610dbc81611909565b50565b6000610dca60085490565b8210610e2d5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610817565b60088281548110610e4057610e40612969565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b03168061070a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610817565b60006001600160a01b038216610f345760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610817565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b03610100909104163314610f805760405162461bcd60e51b8152600401610817906127f6565b610ce560006119b0565b600a546001600160a01b03610100909104163314610fba5760405162461bcd60e51b8152600401610817906127f6565b6001600160a01b038281166000818152600d602052604080822080546001600160a01b03191694861694909417909355915190917f77b15bf1925eb6403cdcd3a6b7df1451a6e970b6c273dd573b3b5335fef5a7f991a25050565b6000611023600a5460ff1690565b156110405760405162461bcd60e51b8152600401610817906127cc565b6002600b5414156110935760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610817565b6002600b55336000908152600e60205260409020600c5434146110ed5760405162461bcd60e51b8152602060048201526012602482015271125b98dbdc9c9958dd08115512081cd95b9d60721b6044820152606401610817565b33848460405160200161110293929190612737565b6040516020818303038152906040528051906020012081600201541461116a5760405162461bcd60e51b815260206004820152601760248201527f436f6d6d69746d656e7420697320696e636f72726563740000000000000000006044820152606401610817565b80544210156111ad5760405162461bcd60e51b815260206004820152600f60248201526e10d85b9b9bdd081b5a5b9d081e595d608a1b6044820152606401610817565b80600101544211156111f65760405162461bcd60e51b815260206004820152601260248201527110dbdb5b5a5d1b595b9d08195e1c1a5c995960721b6044820152606401610817565b60038101546001600160a01b03166000908152601060205260408120805434929061122290849061282b565b90915550506000848152600f6020526040812080546001929061124690849061282b565b90915550506000848152600f602052604081205461126b66038d7ea4c6800087612857565b611275919061282b565b336000818152600e6020526040812081815560018101829055600281019190915560030180546001600160a01b03191690559091506112b49082611a0a565b6001600b55949350505050565b336000908152600e602052604081208054151580156112e1575080544210155b91505090565b600a546001600160a01b036101009091041633146113175760405162461bcd60e51b8152600401610817906127f6565b610ce5611a24565b600a546001600160a01b0361010090910416331461134f5760405162461bcd60e51b8152600401610817906127f6565b600c81905560405181907fa6dc15bdb68da224c66db4b3838d9a2b205138e8cff6774e57d0af91e196d62290600090a250565b60606001805461071f906128bd565b61139c338383611a7c565b5050565b600a5460ff16156113c35760405162461bcd60e51b8152600401610817906127cc565b60006113d28686868686611b4b565b6001600160a01b038082166000908152600d60205260409020549192501661143c5760405162461bcd60e51b815260206004820152601c60248201527f5369676e61746f7279206973206e6f74206120636f6d6d6974746572000000006044820152606401610817565b6001600160a01b0386166000908152600e60205260409020600281015415806114685750806001015442115b6114b45760405162461bcd60e51b815260206004820152601f60248201527f4164647265737320686173206578697374696e6720636f6d6d69746d656e74006044820152606401610817565b6003810180546001600160a01b0319166001600160a01b0384161790556114de4262093a8061282b565b81556114ed42625c490061282b565b6001820155600281018690556040518681526001600160a01b0383811691908916907fffaf5ade9a72747e20b851f075f08e02c2586f9e4aec537be3fad850c040e2679060200160405180910390a350505050505050565b6000818152600260205260409020546060906001600160a01b03166115c45760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610817565b60006115ce611cf4565b905060008151116115ee5760405180602001604052806000815250611619565b806115f884611d14565b60405160200161160992919061269f565b6040516020818303038152906040525b9392505050565b606061162a611cf4565b60405160200161163a91906126ce565b604051602081830303815290604052905090565b600a546001600160a01b0361010090910416331461167e5760405162461bcd60e51b8152600401610817906127f6565b6001600160a01b0381166116e35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610817565b610dbc816119b0565b60006001600160e01b0319821663780e9d6360e01b148061070a575061070a82611e12565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061174682610e52565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600a5460ff166117c85760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610817565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000818152600260205260408120546001600160a01b031661188b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610817565b600061189683610e52565b9050806001600160a01b0316846001600160a01b031614806118d15750836001600160a01b03166118c6846107a2565b6001600160a01b0316145b8061190157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b600061191482610e52565b905061192281600084611e62565b61192d600083611711565b6001600160a01b0381166000908152600360205260408120805460019290611956908490612876565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61139c828260405180602001604052806000815250611e90565b600a5460ff1615611a475760405162461bcd60e51b8152600401610817906127cc565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586117f53390565b816001600160a01b0316836001600160a01b03161415611ade5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610817565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6000807f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611b77610710565b805160209182012060408051808201825260018152603160f81b90840152805180840194909452838101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608401524660808401523060a0808501919091528151808503909101815260c0840182528051908301207f314da02917ab2dc1057a54f9281f1dd3e542e525b1252a0196a71db6e4f5493f60e08501526001600160a01b038b166101008501526101208085018b90528251808603909101815261014085019092528151919092012061190160f01b61016084015261016283018290526101828301819052909250906000906101a20160408051601f198184030181528282528051602091820120600080855291840180845281905260ff8b169284019290925260608301899052608083018890529092509060019060a0016020604051602081039080840390855afa158015611cdb573d6000803e3d6000fd5b5050604051601f1901519b9a5050505050505050505050565b60606040518060800160405280604381526020016129ac60439139905090565b606081611d385750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611d625780611d4c816128f8565b9150611d5b9050600a83612843565b9150611d3c565b60008167ffffffffffffffff811115611d7d57611d7d61297f565b6040519080825280601f01601f191660200182016040528015611da7576020820181803683370190505b5090505b841561190157611dbc600183612876565b9150611dc9600a86612913565b611dd490603061282b565b60f81b818381518110611de957611de9612969565b60200101906001600160f81b031916908160001a905350611e0b600a86612843565b9450611dab565b60006001600160e01b031982166380ac58cd60e01b1480611e4357506001600160e01b03198216635b5e139f60e01b145b8061070a57506301ffc9a760e01b6001600160e01b031983161461070a565b600a5460ff1615611e855760405162461bcd60e51b8152600401610817906127cc565b61094d838383611ec3565b611e9a8383611ece565b611ea7600084848461201c565b61094d5760405162461bcd60e51b81526004016108179061277a565b61094d838383612129565b6001600160a01b038216611f245760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610817565b6000818152600260205260409020546001600160a01b031615611f895760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610817565b611f9560008383611e62565b6001600160a01b0382166000908152600360205260408120805460019290611fbe90849061282b565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b1561211e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906120609033908990889088906004016126fa565b602060405180830381600087803b15801561207a57600080fd5b505af19250505080156120aa575060408051601f3d908101601f191682019092526120a7918101906125e2565b60015b612104573d8080156120d8576040519150601f19603f3d011682016040523d82523d6000602084013e6120dd565b606091505b5080516120fc5760405162461bcd60e51b81526004016108179061277a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611901565b506001949350505050565b6001600160a01b0383166121845761217f81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6121a7565b816001600160a01b0316836001600160a01b0316146121a7576121a783826121e1565b6001600160a01b0382166121be5761094d8161227e565b826001600160a01b0316826001600160a01b03161461094d5761094d828261232d565b600060016121ee84610ec9565b6121f89190612876565b60008381526007602052604090205490915080821461224b576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061229090600190612876565b600083815260096020526040812054600880549394509092849081106122b8576122b8612969565b9060005260206000200154905080600883815481106122d9576122d9612969565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061231157612311612953565b6001900381819060005260206000200160009055905550505050565b600061233883610ec9565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b600067ffffffffffffffff8084111561238c5761238c61297f565b604051601f8501601f19908116603f011681019082821181831017156123b4576123b461297f565b816040528093508581528686860111156123cd57600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b03811681146123fe57600080fd5b919050565b60006020828403121561241557600080fd5b611619826123e7565b6000806040838503121561243157600080fd5b61243a836123e7565b9150612448602084016123e7565b90509250929050565b60008060006060848603121561246657600080fd5b61246f846123e7565b925061247d602085016123e7565b9150604084013590509250925092565b600080600080608085870312156124a357600080fd5b6124ac856123e7565b93506124ba602086016123e7565b925060408501359150606085013567ffffffffffffffff8111156124dd57600080fd5b8501601f810187136124ee57600080fd5b6124fd87823560208401612371565b91505092959194509250565b6000806040838503121561251c57600080fd5b612525836123e7565b91506020830135801515811461253a57600080fd5b809150509250929050565b600080600080600060a0868803121561255d57600080fd5b612566866123e7565b945060208601359350604086013560ff8116811461258357600080fd5b94979396509394606081013594506080013592915050565b600080604083850312156125ae57600080fd5b6125b7836123e7565b946020939093013593505050565b6000602082840312156125d757600080fd5b813561161981612995565b6000602082840312156125f457600080fd5b815161161981612995565b60006020828403121561261157600080fd5b5035919050565b6000806040838503121561262b57600080fd5b82359150602083013567ffffffffffffffff81111561264957600080fd5b8301601f8101851361265a57600080fd5b61266985823560208401612371565b9150509250929050565b6000815180845261268b81602086016020860161288d565b601f01601f19169290920160200192915050565b600083516126b181846020880161288d565b8351908301906126c581836020880161288d565b01949350505050565b600082516126e081846020870161288d565b6718dbdb9d1c9858dd60c21b920191825250600801919050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061272d90830184612673565b9695505050505050565b60018060a01b038416815282602082015260606040820152600061275e6060830184612673565b95945050505050565b6020815260006116196020830184612673565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561283e5761283e612927565b500190565b6000826128525761285261293d565b500490565b600081600019048311821515161561287157612871612927565b500290565b60008282101561288857612888612927565b500390565b60005b838110156128a8578181015183820152602001612890565b838111156128b7576000848401525b50505050565b600181811c908216806128d157607f821691505b602082108114156128f257634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561290c5761290c612927565b5060010190565b6000826129225761292261293d565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610dbc57600080fdfe697066733a2f2f62616679626569687262693667687278636b647a6c69747570776e787a69636f637266657571716f61766b747870376f727577326262656a6468752fa26469706673582212202283df30cd944c257abff2f89679c6b992b13d2edb2aa3a16df5ec58e23f9a5464736f6c63430008070033";

type ProofOfResidencyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProofOfResidencyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProofOfResidency__factory extends ContractFactory {
  constructor(...args: ProofOfResidencyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    initialCommitter: string,
    initialTreasury: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProofOfResidency> {
    return super.deploy(
      initialCommitter,
      initialTreasury,
      overrides || {}
    ) as Promise<ProofOfResidency>;
  }
  getDeployTransaction(
    initialCommitter: string,
    initialTreasury: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialCommitter,
      initialTreasury,
      overrides || {}
    );
  }
  attach(address: string): ProofOfResidency {
    return super.attach(address) as ProofOfResidency;
  }
  connect(signer: Signer): ProofOfResidency__factory {
    return super.connect(signer) as ProofOfResidency__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProofOfResidencyInterface {
    return new utils.Interface(_abi) as ProofOfResidencyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProofOfResidency {
    return new Contract(address, _abi, signerOrProvider) as ProofOfResidency;
  }
}
