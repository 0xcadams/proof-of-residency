/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProofOfResidency,
  ProofOfResidencyInterface,
} from "../ProofOfResidency";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialCommitter",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialTreasury",
        type: "address",
      },
      {
        internalType: "string",
        name: "initialBaseUri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "committer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "CommitmentCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "committer",
        type: "address",
      },
    ],
    name: "CommitterAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "committer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fundsLost",
        type: "uint256",
      },
    ],
    name: "CommitterRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "PriceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenChallenged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newCommitter",
        type: "address",
      },
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "addCommitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "burnTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "commitAddress",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "countryTokenCounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCommitmentPeriodIsUpcoming",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCommitmentPeriodIsValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "country",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "commitment",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projectTreasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "removedCommitter",
        type: "address",
      },
    ],
    name: "removeCommitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reservePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "country",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "commitment",
        type: "string",
      },
    ],
    name: "respondToChallenge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseUri",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "setProjectTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokenChallengeExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokenChallengeExpired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620038623803806200386283398101604081905262000034916200039f565b604080518082018252601b81527f50726f6f66206f66205265736964656e63792050726f746f636f6c00000000006020808301918252835180850190945260048452630504f52560e41b908401528151919291839183916200009991600091620002dc565b508051620000af906001906020840190620002dc565b5050600a805460ff1916905550620000cb9150339050620001e8565b6001600b55600d80546001600160a01b0319166001600160a01b038516179055600c819055815162000105906014906020850190620002dc565b506001600160a01b038481166000908152600f6020526040902080546001600160a01b0319169185169190911790557f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6200015f62000242565b805160209182012060408051808201825260018152603160f81b90840152805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160408051601f19818403018152919052805160209091012060805250620004fc92505050565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6060600080546200025390620004a9565b80601f01602080910402602001604051908101604052809291908181526020018280546200028190620004a9565b8015620002d25780601f10620002a657610100808354040283529160200191620002d2565b820191906000526020600020905b815481529060010190602001808311620002b457829003601f168201915b5050505050905090565b828054620002ea90620004a9565b90600052602060002090601f0160209004810192826200030e576000855562000359565b82601f106200032957805160ff191683800117855562000359565b8280016001018555821562000359579182015b82811115620003595782518255916020019190600101906200033c565b50620003679291506200036b565b5090565b5b808211156200036757600081556001016200036c565b80516001600160a01b03811681146200039a57600080fd5b919050565b60008060008060808587031215620003b657600080fd5b620003c18562000382565b93506020620003d281870162000382565b60408701519094506001600160401b0380821115620003f057600080fd5b818801915088601f8301126200040557600080fd5b8151818111156200041a576200041a620004e6565b604051601f8201601f19908116603f01168101908382118183101715620004455762000445620004e6565b816040528281528b868487010111156200045e57600080fd5b600093505b8284101562000482578484018601518185018701529285019262000463565b82841115620004945760008684830101525b60609a909a0151989b979a5050505050505050565b600181811c90821680620004be57607f821691505b60208210811415620004e057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805161334a62000518600039600061233e015261334a6000f3fe60806040526004361061025c5760003560e01c806370a0823111610144578063a22cb465116100b6578063d17547d31161007a578063d17547d314610765578063d2ec85d314610785578063db2e1eed146107a5578063e8a3d485146107bb578063e985e9c5146107d0578063f2fde38b1461081957600080fd5b8063a22cb465146106d7578063b52831e3146106f7578063b88d4fde1461070a578063c3d0c45914610725578063c87b56dd1461074557600080fd5b80638456cb59116101085780638456cb591461061d5780638da5cb5b1461063257806391b7f5ed1461065557806393c6ad321461067557806395d89b41146106a257806398fa2248146106b757600080fd5b806370a0823114610586578063715018a6146105a6578063752edb9d146105bb57806379702a0f146105db5780637ecebe00146105f057600080fd5b80633ccfd60b116101dd5780634f6ccce7116101a15780634f6ccce7146104b657806355f804b3146104d65780635c8934d2146104f65780635c975abb1461052e5780636352211e146105465780636a1db9f71461056657600080fd5b80633ccfd60b146103ea5780633f4ba83a146103ff57806342842e0e1461041457806342966c68146104345780634509034f1461045457600080fd5b806318160ddd1161022457806318160ddd1461034b5780631e96bb9e1461036a57806323b872dd1461038a5780632f745c59146103aa57806334702f03146103ca57600080fd5b806301ffc9a71461026157806306fdde0314610296578063081812fc146102b8578063095ea7b3146102f05780631664891a14610312575b600080fd5b34801561026d57600080fd5b5061028161027c366004612e1d565b610839565b60405190151581526020015b60405180910390f35b3480156102a257600080fd5b506102ab61084a565b60405161028d9190613068565b3480156102c457600080fd5b506102d86102d3366004612ef5565b6108dc565b6040516001600160a01b03909116815260200161028d565b3480156102fc57600080fd5b5061031061030b366004612d3f565b610976565b005b34801561031e57600080fd5b5061028161032d366004612ba7565b6001600160a01b031660009081526012602052604090205442111590565b34801561035757600080fd5b506008545b60405190815260200161028d565b34801561037657600080fd5b50610310610385366004612ba7565b610a8c565b34801561039657600080fd5b506103106103a5366004612bf5565b610ade565b3480156103b657600080fd5b5061035c6103c5366004612d3f565b610b3e565b3480156103d657600080fd5b506103106103e5366004612ba7565b610bd4565b3480156103f657600080fd5b50610310610c80565b34801561040b57600080fd5b50610310610e7c565b34801561042057600080fd5b5061031061042f366004612bf5565b610eb6565b34801561044057600080fd5b5061031061044f366004612ef5565b610f1a565b34801561046057600080fd5b50336000908152601160209081526040918290208251608081018452815480825260018301549382019390935260028201546001600160a01b031693810193909352600301546060909201919091524210610281565b3480156104c257600080fd5b5061035c6104d1366004612ef5565b610f95565b3480156104e257600080fd5b506103106104f1366004612e57565b611028565b34801561050257600080fd5b50610281610511366004612ba7565b6001600160a01b0316600090815260126020526040902054151590565b34801561053a57600080fd5b50600a5460ff16610281565b34801561055257600080fd5b506102d8610561366004612ef5565b61106f565b34801561057257600080fd5b5061035c610581366004612ea7565b6110e6565b34801561059257600080fd5b5061035c6105a1366004612ba7565b61123c565b3480156105b257600080fd5b506103106112c3565b3480156105c757600080fd5b506103106105d6366004612bc2565b6112fd565b3480156105e757600080fd5b50610281611388565b3480156105fc57600080fd5b5061035c61060b366004612ba7565b60136020526000908152604090205481565b34801561062957600080fd5b506103106113f6565b34801561063e57600080fd5b50600a5461010090046001600160a01b03166102d8565b34801561066157600080fd5b50610310610670366004612ef5565b61142e565b34801561068157600080fd5b5061035c610690366004612e8c565b600e6020526000908152604090205481565b3480156106ae57600080fd5b506102ab611491565b3480156106c357600080fd5b506102816106d2366004612f0e565b6114a0565b3480156106e357600080fd5b506103106106f2366004612cad565b611608565b610310610705366004612ce9565b611613565b34801561071657600080fd5b5061031061042f366004612c31565b34801561073157600080fd5b50600d546102d8906001600160a01b031681565b34801561075157600080fd5b506102ab610760366004612ef5565b61181d565b34801561077157600080fd5b50610310610780366004612d69565b6118f8565b34801561079157600080fd5b506103106107a0366004612d69565b611a1c565b3480156107b157600080fd5b5061035c600c5481565b3480156107c757600080fd5b506102ab611ba6565b3480156107dc57600080fd5b506102816107eb366004612bc2565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561082557600080fd5b50610310610834366004612ba7565b611bd4565b600061084482611c72565b92915050565b60606000805461085990613226565b80601f016020809104026020016040519081016040528092919081815260200182805461088590613226565b80156108d25780601f106108a7576101008083540402835291602001916108d2565b820191906000526020600020905b8154815290600101906020018083116108b557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661095a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006109818261106f565b9050806001600160a01b0316836001600160a01b031614156109ef5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610951565b336001600160a01b0382161480610a0b5750610a0b81336107eb565b610a7d5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610951565b610a878383611c97565b505050565b600a546001600160a01b03610100909104163314610abc5760405162461bcd60e51b8152600401610951906130f7565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b60405162461bcd60e51b815260206004820152602f60248201527f4552433732314e6f6e5472616e7366657261626c653a207472616e736665724660448201526e1c9bdb481b9bdd08185b1b1bddd959608a1b6064820152608401610951565b6000610b498361123c565b8210610bab5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610951565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a546001600160a01b03610100909104163314610c045760405162461bcd60e51b8152600401610951906130f7565b6001600160a01b038181166000818152600f6020908152604080832080546001600160a01b0319169055601082528083208054600d5490961684528184208690558484529290925590518381527fba5e85a32191ad7530b1992d2854820c9955d43eee2d89d98ddbd0c7ba93e631910160405180910390a25050565b6002600b541415610ca35760405162461bcd60e51b81526004016109519061312c565b6002600b5533600090815260106020526040812054906064610cc66014846131c0565b610cd091906131ac565b905060008111610d135760405162461bcd60e51b815260206004820152600e60248201526d0546178206e6f74206f76657220360941b6044820152606401610951565b33600090815260106020526040808220829055600d5490516001600160a01b039091169083908381818185875af1925050503d8060008114610d71576040519150601f19603f3d011682016040523d82523d6000602084013e610d76565b606091505b5050905080610dc75760405162461bcd60e51b815260206004820152601f60248201527f556e61626c6520746f2073656e642070726f6a656374207472656173757279006044820152606401610951565b336000908152600f60205260408120546001600160a01b0316610dea84866131df565b604051600081818185875af1925050503d8060008114610e26576040519150601f19603f3d011682016040523d82523d6000602084013e610e2b565b606091505b5050905080610e715760405162461bcd60e51b8152602060048201526012602482015271556e61626c6520746f20776974686472617760701b6044820152606401610951565b50506001600b555050565b600a546001600160a01b03610100909104163314610eac5760405162461bcd60e51b8152600401610951906130f7565b610eb4611d05565b565b60405162461bcd60e51b815260206004820152603360248201527f4552433732314e6f6e5472616e7366657261626c653a20736166655472616e7360448201527219995c919c9bdb481b9bdd08185b1b1bddd959606a1b6064820152608401610951565b610f243382611d98565b610f895760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b6064820152608401610951565b610f9281611e8f565b50565b6000610fa060085490565b82106110035760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610951565b60088281548110611016576110166132d2565b90600052602060002001549050919050565b600a546001600160a01b036101009091041633146110585760405162461bcd60e51b8152600401610951906130f7565b805161106b906014906020840190612a68565b5050565b6000818152600260205260408120546001600160a01b0316806108445760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610951565b60006110f4600a5460ff1690565b156111115760405162461bcd60e51b8152600401610951906130cd565b6002600b5414156111345760405162461bcd60e51b81526004016109519061312c565b6002600b556111423361123c565b156111845760405162461bcd60e51b815260206004820152601260248201527120b63932b0b23c9037bbb739903a37b5b2b760711b6044820152606401610951565b60006111908484611f36565b60608101516040808301516001600160a01b031660009081526010602052908120805493945091926111c3908490613194565b909155505061ffff84166000908152600e602052604081208054600192906111ec908490613194565b909155505061ffff84166000818152600e602052604081205490916112199066038d7ea4c68000906131c0565b6112239190613194565b905061122f3382612126565b6001600b55949350505050565b60006001600160a01b0382166112a75760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610951565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b036101009091041633146112f35760405162461bcd60e51b8152600401610951906130f7565b610eb46000612140565b600a546001600160a01b0361010090910416331461132d5760405162461bcd60e51b8152600401610951906130f7565b6001600160a01b038281166000818152600f602052604080822080546001600160a01b03191694861694909417909355915190917f77b15bf1925eb6403cdcd3a6b7df1451a6e970b6c273dd573b3b5335fef5a7f991a25050565b3360009081526011602090815260408083208151608081018352815480825260018301549482019490945260028201546001600160a01b0316928101929092526003015460608201529042108015906113f0575080516113ec9062093a8090613194565b4211155b91505090565b600a546001600160a01b036101009091041633146114265760405162461bcd60e51b8152600401610951906130f7565b610eb461219a565b600a546001600160a01b0361010090910416331461145e5760405162461bcd60e51b8152600401610951906130f7565b600c81905560405181907fa6dc15bdb68da224c66db4b3838d9a2b205138e8cff6774e57d0af91e196d62290600090a250565b60606001805461085990613226565b60006114ae600a5460ff1690565b156114cb5760405162461bcd60e51b8152600401610951906130cd565b6002600b5414156114ee5760405162461bcd60e51b81526004016109519061312c565b6002600b5561ffff831661150966038d7ea4c68000866131ac565b1461154a5760405162461bcd60e51b815260206004820152601160248201527010dbdd5b9d1c9e481b9bdd081d985b1a59607a1b6044820152606401610951565b60006115568484611f36565b336000818152601260205260408082208290556060840151905193945090928381818185875af1925050503d80600081146115ad576040519150601f19603f3d011682016040523d82523d6000602084013e6115b2565b606091505b50509050806115f65760405162461bcd60e51b815260206004820152601060248201526f155b98589b19481d1bc81c99599d5b9960821b6044820152606401610951565b6001925050506001600b559392505050565b61106b3383836121f2565b600a5460ff16156116365760405162461bcd60e51b8152600401610951906130cd565b6002600b5414156116595760405162461bcd60e51b81526004016109519061312c565b6002600b55600061166d86868686866122c1565b6001600160a01b038082166000908152600f6020526040902054919250166116d75760405162461bcd60e51b815260206004820152601760248201527f5369676e61746f7279206e6f6e2d636f6d6d69747465720000000000000000006044820152606401610951565b600c54341461171a5760405162461bcd60e51b815260206004820152600f60248201526e496e636f72726563742076616c756560881b6044820152606401610951565b6001600160a01b0386166000908152601160205260409020600181015415806117515750805461174e90622e248090613194565b42115b6117935760405162461bcd60e51b8152602060048201526013602482015272115e1a5cdd1a5b99c818dbdb5b5a5d1b595b9d606a1b6044820152606401610951565b6002810180546001600160a01b0319166001600160a01b0384161790556117bd62093a8042613194565b8155600181018690553460038201556040518681526001600160a01b0383811691908916907fffaf5ade9a72747e20b851f075f08e02c2586f9e4aec537be3fad850c040e2679060200160405180910390a350506001600b555050505050565b6000818152600260205260409020546060906001600160a01b031661189c5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610951565b60006118a66123fc565b905060008151116118c657604051806020016040528060008152506118f1565b806118d08461240b565b6040516020016118e1929190612f91565b6040516020818303038152906040525b9392505050565b600a546001600160a01b036101009091041633146119285760405162461bcd60e51b8152600401610951906130f7565b60005b815181101561106b57600061195a83838151811061194b5761194b6132d2565b60200260200101516001610b3e565b9050622e248061196d62093a8042613194565b6119779190613194565b6012600085858151811061198d5761198d6132d2565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002081905550808383815181106119cc576119cc6132d2565b60200260200101516001600160a01b03167ffb435e2b911f412494cf70b593bfce6da7199bffeff5e9030de6870bd3daadeb60405160405180910390a35080611a1481613261565b91505061192b565b600a546001600160a01b03610100909104163314611a4c5760405162461bcd60e51b8152600401610951906130f7565b60005b815181101561106b57611a93828281518110611a6d57611a6d6132d2565b60200260200101516001600160a01b031660009081526012602052604090205442111590565b611ad75760405162461bcd60e51b815260206004820152601560248201527410da185b1b195b99d9481b9bdd08195e1c1a5c9959605a1b6044820152606401610951565b6000611aee83838151811061194b5761194b6132d2565b9050600060116000858581518110611b0857611b086132d2565b6020908102919091018101516001600160a01b0390811683528282019390935260409182016000908120835160808101855281548152600182015481850152600282015490951685850181905260039091015460608601819052908252601090925291822080549394509092909190611b82908490613194565b90915550611b91905082611e8f565b50508080611b9e90613261565b915050611a4f565b6060611bb06123fc565b604051602001611bc09190612fc0565b604051602081830303815290604052905090565b600a546001600160a01b03610100909104163314611c045760405162461bcd60e51b8152600401610951906130f7565b6001600160a01b038116611c695760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610951565b610f9281612140565b60006001600160e01b0319821663780e9d6360e01b1480610844575061084482612509565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611ccc8261106f565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600a5460ff16611d4e5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610951565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000818152600260205260408120546001600160a01b0316611e115760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610951565b6000611e1c8361106f565b9050806001600160a01b0316846001600160a01b03161480611e575750836001600160a01b0316611e4c846108dc565b6001600160a01b0316145b80611e8757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b6000611e9a8261106f565b9050611ea881600084612559565b611eb3600083611c97565b6001600160a01b0381166000908152600360205260408120805460019290611edc9084906131df565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60408051608080820183526000808352602080840182905283850182905260609384018290523380835260118252858320865194850187528054855260018101548584015260028101546001600160a01b031685880152600301549484019490945283825260138152908490205493519193611fb89392879287929101613029565b604051602081830303815290604052805190602001208160200151146120175760405162461bcd60e51b815260206004820152601460248201527310dbdb5b5a5d1b595b9d081a5b98dbdc9c9958dd60621b6044820152606401610951565b61201f611388565b61206b5760405162461bcd60e51b815260206004820152601960248201527f436f6d6d69746d656e7420706572696f6420696e76616c6964000000000000006044820152606401610951565b6040808201516001600160a01b039081166000908152600f6020529190912054166120cc5760405162461bcd60e51b815260206004820152601160248201527014da59db985d1bdc9e481c995b5bdd9959607a1b6044820152606401610951565b3360009081526013602052604081208054600192906120ec908490613194565b9091555050336000908152601160205260408120818155600181018290556002810180546001600160a01b03191690556003015592915050565b61106b828260405180602001604052806000815250612587565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600a5460ff16156121bd5760405162461bcd60e51b8152600401610951906130cd565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611d7b3390565b816001600160a01b0316836001600160a01b031614156122545760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610951565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03851660008181526013602090815260408083205481517fb91dfcf0a8a93d828d341c3f973ee8aba0b4387c636e55a55eddb70c4988866a8185015280830195909552606085018990526080808601919091528151808603909101815260a08501825280519083012061190160f01b60c08601527f000000000000000000000000000000000000000000000000000000000000000060c286015260e280860182905282518087039091018152610102860180845281519185019190912090859052610122860180845281905260ff891661014287015261016286018890526101828601879052915193949093919285926001926101a28082019392601f1981019281900390910190855afa1580156123e4573d6000803e3d6000fd5b5050604051601f1901519a9950505050505050505050565b60606014805461085990613226565b60608161242f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612459578061244381613261565b91506124529050600a836131ac565b9150612433565b60008167ffffffffffffffff811115612474576124746132e8565b6040519080825280601f01601f19166020018201604052801561249e576020820181803683370190505b5090505b8415611e87576124b36001836131df565b91506124c0600a8661327c565b6124cb906030613194565b60f81b8183815181106124e0576124e06132d2565b60200101906001600160f81b031916908160001a905350612502600a866131ac565b94506124a2565b60006001600160e01b031982166380ac58cd60e01b148061253a57506001600160e01b03198216635b5e139f60e01b145b8061084457506301ffc9a760e01b6001600160e01b0319831614610844565b600a5460ff161561257c5760405162461bcd60e51b8152600401610951906130cd565b610a878383836125ba565b61259183836125c5565b61259e6000848484612713565b610a875760405162461bcd60e51b81526004016109519061307b565b610a87838383612820565b6001600160a01b03821661261b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610951565b6000818152600260205260409020546001600160a01b0316156126805760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610951565b61268c60008383612559565b6001600160a01b03821660009081526003602052604081208054600192906126b5908490613194565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b1561281557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612757903390899088908890600401612fec565b602060405180830381600087803b15801561277157600080fd5b505af19250505080156127a1575060408051601f3d908101601f1916820190925261279e91810190612e3a565b60015b6127fb573d8080156127cf576040519150601f19603f3d011682016040523d82523d6000602084013e6127d4565b606091505b5080516127f35760405162461bcd60e51b81526004016109519061307b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611e87565b506001949350505050565b6001600160a01b03831661287b5761287681600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61289e565b816001600160a01b0316836001600160a01b03161461289e5761289e83826128d8565b6001600160a01b0382166128b557610a8781612975565b826001600160a01b0316826001600160a01b031614610a8757610a878282612a24565b600060016128e58461123c565b6128ef91906131df565b600083815260076020526040902054909150808214612942576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090612987906001906131df565b600083815260096020526040812054600880549394509092849081106129af576129af6132d2565b9060005260206000200154905080600883815481106129d0576129d06132d2565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480612a0857612a086132bc565b6001900381819060005260206000200160009055905550505050565b6000612a2f8361123c565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054612a7490613226565b90600052602060002090601f016020900481019282612a965760008555612adc565b82601f10612aaf57805160ff1916838001178555612adc565b82800160010185558215612adc579182015b82811115612adc578251825591602001919060010190612ac1565b50612ae8929150612aec565b5090565b5b80821115612ae85760008155600101612aed565b600067ffffffffffffffff831115612b1b57612b1b6132e8565b612b2e601f8401601f1916602001613163565b9050828152838383011115612b4257600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b0381168114612b7057600080fd5b919050565b600082601f830112612b8657600080fd5b6118f183833560208501612b01565b803561ffff81168114612b7057600080fd5b600060208284031215612bb957600080fd5b6118f182612b59565b60008060408385031215612bd557600080fd5b612bde83612b59565b9150612bec60208401612b59565b90509250929050565b600080600060608486031215612c0a57600080fd5b612c1384612b59565b9250612c2160208501612b59565b9150604084013590509250925092565b60008060008060808587031215612c4757600080fd5b612c5085612b59565b9350612c5e60208601612b59565b925060408501359150606085013567ffffffffffffffff811115612c8157600080fd5b8501601f81018713612c9257600080fd5b612ca187823560208401612b01565b91505092959194509250565b60008060408385031215612cc057600080fd5b612cc983612b59565b915060208301358015158114612cde57600080fd5b809150509250929050565b600080600080600060a08688031215612d0157600080fd5b612d0a86612b59565b945060208601359350604086013560ff81168114612d2757600080fd5b94979396509394606081013594506080013592915050565b60008060408385031215612d5257600080fd5b612d5b83612b59565b946020939093013593505050565b60006020808385031215612d7c57600080fd5b823567ffffffffffffffff80821115612d9457600080fd5b818501915085601f830112612da857600080fd5b813581811115612dba57612dba6132e8565b8060051b9150612dcb848301613163565b8181528481019084860184860187018a1015612de657600080fd5b600095505b83861015612e1057612dfc81612b59565b835260019590950194918601918601612deb565b5098975050505050505050565b600060208284031215612e2f57600080fd5b81356118f1816132fe565b600060208284031215612e4c57600080fd5b81516118f1816132fe565b600060208284031215612e6957600080fd5b813567ffffffffffffffff811115612e8057600080fd5b611e8784828501612b75565b600060208284031215612e9e57600080fd5b6118f182612b95565b60008060408385031215612eba57600080fd5b612ec383612b95565b9150602083013567ffffffffffffffff811115612edf57600080fd5b612eeb85828601612b75565b9150509250929050565b600060208284031215612f0757600080fd5b5035919050565b600080600060608486031215612f2357600080fd5b83359250612f3360208501612b95565b9150604084013567ffffffffffffffff811115612f4f57600080fd5b612f5b86828701612b75565b9150509250925092565b60008151808452612f7d8160208601602086016131f6565b601f01601f19169290920160200192915050565b60008351612fa38184602088016131f6565b835190830190612fb78183602088016131f6565b01949350505050565b60008251612fd28184602087016131f6565b6718dbdb9d1c9858dd60c21b920191825250600801919050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061301f90830184612f65565b9695505050505050565b6001600160a01b038516815261ffff8416602082015260806040820181905260009061305790830185612f65565b905082606083015295945050505050565b6020815260006118f16020830184612f65565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b604051601f8201601f1916810167ffffffffffffffff8111828210171561318c5761318c6132e8565b604052919050565b600082198211156131a7576131a7613290565b500190565b6000826131bb576131bb6132a6565b500490565b60008160001904831182151516156131da576131da613290565b500290565b6000828210156131f1576131f1613290565b500390565b60005b838110156132115781810151838201526020016131f9565b83811115613220576000848401525b50505050565b600181811c9082168061323a57607f821691505b6020821081141561325b57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561327557613275613290565b5060010190565b60008261328b5761328b6132a6565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610f9257600080fdfea26469706673582212205164d694763e348aac741df511ab665683c948e56224a7f405d01bb5f5fb460364736f6c63430008070033";

type ProofOfResidencyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProofOfResidencyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProofOfResidency__factory extends ContractFactory {
  constructor(...args: ProofOfResidencyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ProofOfResidency";
  }

  deploy(
    initialCommitter: string,
    initialTreasury: string,
    initialBaseUri: string,
    initialPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProofOfResidency> {
    return super.deploy(
      initialCommitter,
      initialTreasury,
      initialBaseUri,
      initialPrice,
      overrides || {}
    ) as Promise<ProofOfResidency>;
  }
  getDeployTransaction(
    initialCommitter: string,
    initialTreasury: string,
    initialBaseUri: string,
    initialPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialCommitter,
      initialTreasury,
      initialBaseUri,
      initialPrice,
      overrides || {}
    );
  }
  attach(address: string): ProofOfResidency {
    return super.attach(address) as ProofOfResidency;
  }
  connect(signer: Signer): ProofOfResidency__factory {
    return super.connect(signer) as ProofOfResidency__factory;
  }
  static readonly contractName: "ProofOfResidency";
  public readonly contractName: "ProofOfResidency";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProofOfResidencyInterface {
    return new utils.Interface(_abi) as ProofOfResidencyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProofOfResidency {
    return new Contract(address, _abi, signerOrProvider) as ProofOfResidency;
  }
}
