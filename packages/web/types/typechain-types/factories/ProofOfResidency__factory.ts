/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProofOfResidency,
  ProofOfResidencyInterface,
} from "../ProofOfResidency";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialCommitter",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialTreasury",
        type: "address",
      },
      {
        internalType: "string",
        name: "initialBaseUri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "committer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "mailingAddressId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "CommitmentCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "committer",
        type: "address",
      },
    ],
    name: "CommitterAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "committer",
        type: "address",
      },
    ],
    name: "CommitterRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "blacklistedAddress",
        type: "uint256",
      },
    ],
    name: "MailingAddressBlacklisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "PriceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newCommitter",
        type: "address",
      },
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "addCommitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mailingAddressId",
        type: "uint256",
      },
    ],
    name: "blacklistMailingAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "hashedMailingAddress",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "commitAddress",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "countryTokenCounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCommitment",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "validAt",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "commitment",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "committer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct ProofOfResidency.Commitment",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCommitmentPeriodIsUpcoming",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCommitmentPeriodIsValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "mailingAddressCounts",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "country",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "publicKey",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projectTreasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "removedCommitter",
        type: "address",
      },
    ],
    name: "removeCommitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reservePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseUri",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "setProjectTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200349c3803806200349c83398101604081905262000034916200039f565b604080518082018252601b81527f50726f6f66206f66205265736964656e63792050726f746f636f6c00000000006020808301918252835180850190945260048452630504f52560e41b908401528151919291839183916200009991600091620002dc565b508051620000af906001906020840190620002dc565b5050600b805460ff1916905550620000cb9150339050620001e8565b6001600c55600e80546001600160a01b0319166001600160a01b038516179055600d819055815162000105906015906020850190620002dc565b506001600160a01b03848116600090815260116020526040902080546001600160a01b0319169185169190911790557f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6200015f62000242565b805160209182012060408051808201825260018152603160f81b90840152805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160408051601f19818403018152919052805160209091012060805250620004fc92505050565b600b80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6060600080546200025390620004a9565b80601f01602080910402602001604051908101604052809291908181526020018280546200028190620004a9565b8015620002d25780601f10620002a657610100808354040283529160200191620002d2565b820191906000526020600020905b815481529060010190602001808311620002b457829003601f168201915b5050505050905090565b828054620002ea90620004a9565b90600052602060002090601f0160209004810192826200030e576000855562000359565b82601f106200032957805160ff191683800117855562000359565b8280016001018555821562000359579182015b82811115620003595782518255916020019190600101906200033c565b50620003679291506200036b565b5090565b5b808211156200036757600081556001016200036c565b80516001600160a01b03811681146200039a57600080fd5b919050565b60008060008060808587031215620003b657600080fd5b620003c18562000382565b93506020620003d281870162000382565b60408701519094506001600160401b0380821115620003f057600080fd5b818801915088601f8301126200040557600080fd5b8151818111156200041a576200041a620004e6565b604051601f8201601f19908116603f01168101908382118183101715620004455762000445620004e6565b816040528281528b868487010111156200045e57600080fd5b600093505b8284101562000482578484018601518185018701529285019262000463565b82841115620004945760008684830101525b60609a909a0151989b979a5050505050505050565b600181811c90821680620004be57607f821691505b60208210811415620004e057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b608051612f84620005186000396000611eb50152612f846000f3fe6080604052600436106102465760003560e01c806370a0823111610139578063a22cb465116100b6578063db2e1eed1161007a578063db2e1eed14610775578063dcd2a6021461078b578063e8a3d485146107ab578063e985e9c5146107c0578063eeddb65614610809578063f2fde38b1461082957600080fd5b8063a22cb465146106b6578063b88d4fde146106d6578063bf126456146106f1578063c3d0c45914610735578063c87b56dd1461075557600080fd5b80638456cb59116100fd5780638456cb591461061c5780638da5cb5b1461063157806391b7f5ed1461065457806393c6ad321461067457806395d89b41146106a157600080fd5b806370a082311461059f578063715018a6146105bf578063752edb9d146105d4578063792dfbeb146105f457806379702a0f1461060757600080fd5b80633ccfd60b116101c75780634f6ccce71161018b5780634f6ccce71461050757806355f804b3146105275780635c975abb146105475780636352211e1461055f5780636a1db9f71461057f57600080fd5b80633ccfd60b1461043a5780633f4ba83a1461044f57806342842e0e1461046457806342966c68146104845780634509034f146104a457600080fd5b80631e96bb9e1161020e5780631e96bb9e1461031b57806323b872dd1461033b5780632a79c6111461035b5780632f745c59146103fa57806334702f031461041a57600080fd5b806301ffc9a71461024b57806306fdde0314610280578063081812fc146102a2578063095ea7b3146102da57806318160ddd146102fc575b600080fd5b34801561025757600080fd5b5061026b610266366004612aca565b610849565b60405190151581526020015b60405180910390f35b34801561028c57600080fd5b5061029561085a565b6040516102779190612cb6565b3480156102ae57600080fd5b506102c26102bd366004612ba2565b6108ec565b6040516001600160a01b039091168152602001610277565b3480156102e657600080fd5b506102fa6102f5366004612aa0565b610986565b005b34801561030857600080fd5b506008545b604051908152602001610277565b34801561032757600080fd5b506102fa6103363660046128fe565b610a9c565b34801561034757600080fd5b506102fa61035636600461294c565b610aee565b34801561036757600080fd5b5060408051608080820183526000808352602080840182905283850182905260609384018290523382526013815290849020845180840186528154808252600183015482850190815260028401546001600160a01b03908116848a019081526003909501549388019384528851928352905194820194909452915190921694810194909452519183019190915201610277565b34801561040657600080fd5b5061030d610415366004612aa0565b610b4e565b34801561042657600080fd5b506102fa6104353660046128fe565b610be4565b34801561044657600080fd5b506102fa610c63565b34801561045b57600080fd5b506102fa610e5f565b34801561047057600080fd5b506102fa61047f36600461294c565b610e99565b34801561049057600080fd5b506102fa61049f366004612ba2565b610efd565b3480156104b057600080fd5b50336000908152601360209081526040918290208251608081018452815480825260018301549382019390935260028201546001600160a01b0316938101939093526003015460609092019190915242111561026b565b34801561051357600080fd5b5061030d610522366004612ba2565b610f78565b34801561053357600080fd5b506102fa610542366004612b04565b61100b565b34801561055357600080fd5b50600b5460ff1661026b565b34801561056b57600080fd5b506102c261057a366004612ba2565b611052565b34801561058b57600080fd5b5061030d61059a366004612b54565b6110c9565b3480156105ab57600080fd5b5061030d6105ba3660046128fe565b611381565b3480156105cb57600080fd5b506102fa611408565b3480156105e057600080fd5b506102fa6105ef366004612919565b611442565b6102fa610602366004612a40565b6114cd565b34801561061357600080fd5b5061026b6117b8565b34801561062857600080fd5b506102fa611826565b34801561063d57600080fd5b50600b5461010090046001600160a01b03166102c2565b34801561066057600080fd5b506102fa61066f366004612ba2565b61185e565b34801561068057600080fd5b5061030d61068f366004612b39565b60106020526000908152604090205481565b3480156106ad57600080fd5b506102956118c1565b3480156106c257600080fd5b506102fa6106d1366004612a04565b6118d0565b3480156106e257600080fd5b506102fa61047f366004612988565b3480156106fd57600080fd5b5061072261070c366004612ba2565b600f6020526000908152604090205461ffff1681565b60405161ffff9091168152602001610277565b34801561074157600080fd5b50600e546102c2906001600160a01b031681565b34801561076157600080fd5b50610295610770366004612ba2565b6118db565b34801561078157600080fd5b5061030d600d5481565b34801561079757600080fd5b506102fa6107a6366004612ba2565b6119b6565b3480156107b757600080fd5b50610295611a29565b3480156107cc57600080fd5b5061026b6107db366004612919565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561081557600080fd5b5061030d610824366004612ba2565b611a57565b34801561083557600080fd5b506102fa6108443660046128fe565b611adf565b600061085482611b7d565b92915050565b60606000805461086990612e60565b80601f016020809104026020016040519081016040528092919081815260200182805461089590612e60565b80156108e25780601f106108b7576101008083540402835291602001916108e2565b820191906000526020600020905b8154815290600101906020018083116108c557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661096a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061099182611052565b9050806001600160a01b0316836001600160a01b031614156109ff5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610961565b336001600160a01b0382161480610a1b5750610a1b81336107db565b610a8d5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610961565b610a978383611ba2565b505050565b600b546001600160a01b03610100909104163314610acc5760405162461bcd60e51b815260040161096190612d45565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b60405162461bcd60e51b815260206004820152602f60248201527f4552433732314e6f6e5472616e7366657261626c653a207472616e736665724660448201526e1c9bdb481b9bdd08185b1b1bddd959608a1b6064820152608401610961565b6000610b5983611381565b8210610bbb5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610961565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600b546001600160a01b03610100909104163314610c145760405162461bcd60e51b815260040161096190612d45565b6001600160a01b03811660008181526011602052604080822080546001600160a01b0319169055517f117c88ce0db1154655f2e289ef1695d90636689127cff2dd8090af544cf6c2b79190a250565b6002600c541415610c865760405162461bcd60e51b815260040161096190612d7a565b6002600c5533600090815260126020526040812054906064610ca9601484612dfa565b610cb39190612de6565b905060008111610cf65760405162461bcd60e51b815260206004820152600e60248201526d0546178206e6f74206f76657220360941b6044820152606401610961565b33600090815260126020526040808220829055600e5490516001600160a01b039091169083908381818185875af1925050503d8060008114610d54576040519150601f19603f3d011682016040523d82523d6000602084013e610d59565b606091505b5050905080610daa5760405162461bcd60e51b815260206004820152601f60248201527f556e61626c6520746f2073656e642070726f6a656374207472656173757279006044820152606401610961565b336000908152601160205260408120546001600160a01b0316610dcd8486612e19565b604051600081818185875af1925050503d8060008114610e09576040519150601f19603f3d011682016040523d82523d6000602084013e610e0e565b606091505b5050905080610e545760405162461bcd60e51b8152602060048201526012602482015271556e61626c6520746f20776974686472617760701b6044820152606401610961565b50506001600c555050565b600b546001600160a01b03610100909104163314610e8f5760405162461bcd60e51b815260040161096190612d45565b610e97611c10565b565b60405162461bcd60e51b815260206004820152603360248201527f4552433732314e6f6e5472616e7366657261626c653a20736166655472616e7360448201527219995c919c9bdb481b9bdd08185b1b1bddd959606a1b6064820152608401610961565b610f073382611ca3565b610f6c5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b6064820152608401610961565b610f7581611d9a565b50565b6000610f8360085490565b8210610fe65760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610961565b60088281548110610ff957610ff9612f0c565b90600052602060002001549050919050565b600b546001600160a01b0361010090910416331461103b5760405162461bcd60e51b815260040161096190612d45565b805161104e9060159060208401906127a1565b5050565b6000818152600260205260408120546001600160a01b0316806108545760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610961565b60006110d7600b5460ff1690565b156110f45760405162461bcd60e51b815260040161096190612d1b565b6002600c5414156111175760405162461bcd60e51b815260040161096190612d7a565b6002600c81905533600081815260136020908152604091829020825160808101845281548152600182015481840152948101546001600160a01b031685840152600301546060850152905161117192918791879101612c7f565b604051602081830303815290604052805190602001208160200151146111d05760405162461bcd60e51b815260206004820152601460248201527310dbdb5b5a5d1b595b9d081a5b98dbdc9c9958dd60621b6044820152606401610961565b6111d933611381565b1561121b5760405162461bcd60e51b815260206004820152601260248201527120b63932b0b23c9037bbb739903a37b5b2b760711b6044820152606401610961565b805142101561125e5760405162461bcd60e51b815260206004820152600f60248201526e10d85b9b9bdd081b5a5b9d081e595d608a1b6044820152606401610961565b805161126e90622e248090612dce565b4211156112a75760405162461bcd60e51b8152602060048201526007602482015266115e1c1a5c995960ca1b6044820152606401610961565b60608101516040808301516001600160a01b03166000908152601260205290812080549091906112d8908490612dce565b909155505061ffff84166000908152601060205260408120805460019290611301908490612dce565b909155505061ffff8416600081815260106020526040812054909161132e9066038d7ea4c6800090612dfa565b6113389190612dce565b336000818152601360205260408120818155600181018290556002810180546001600160a01b0319169055600301559091506113749082611dc8565b6001600c55949350505050565b60006001600160a01b0382166113ec5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610961565b506001600160a01b031660009081526003602052604090205490565b600b546001600160a01b036101009091041633146114385760405162461bcd60e51b815260040161096190612d45565b610e976000611de2565b600b546001600160a01b036101009091041633146114725760405162461bcd60e51b815260040161096190612d45565b6001600160a01b0382811660008181526011602052604080822080546001600160a01b03191694861694909417909355915190917f77b15bf1925eb6403cdcd3a6b7df1451a6e970b6c273dd573b3b5335fef5a7f991a25050565b600b5460ff16156114f05760405162461bcd60e51b815260040161096190612d1b565b6002600c5414156115135760405162461bcd60e51b815260040161096190612d7a565b6002600c556000611528878787878787611e3c565b6001600160a01b03808216600090815260116020526040902054919250166115925760405162461bcd60e51b815260206004820152601760248201527f5369676e61746f7279206e6f6e2d636f6d6d69747465720000000000000000006044820152606401610961565b600d5434146115d55760405162461bcd60e51b815260206004820152600f60248201526e496e636f72726563742076616c756560881b6044820152606401610961565b6115de87611381565b156116195760405162461bcd60e51b815260206004820152600b60248201526a2737b71698103a37b5b2b760a91b6044820152606401610961565b600085815260146020526040902054859060ff16156116705760405162461bcd60e51b81526020600482015260136024820152721059191c995cdcc8189b1858dadb1a5cdd1959606a1b6044820152606401610961565b6000818152600f6020526040812080546001929061169390849061ffff16612db1565b825461ffff9182166101009390930a9283029190920219909116179055506001600160a01b0388166000908152601360205260409020600181015415806116e8575080546116e590622e248090612dce565b42115b61172a5760405162461bcd60e51b8152602060048201526013602482015272115e1a5cdd1a5b99c818dbdb5b5a5d1b595b9d606a1b6044820152606401610961565b6002810180546001600160a01b0319166001600160a01b03851617905561175462093a8042612dce565b81556001810188905534600382015560405188815282906001600160a01b0385811691908c16907ffacfb4f8f6a97950a243d2b59a9d270cede18185ffdc705c945bd13657e1bd0f9060200160405180910390a450506001600c5550505050505050565b3360009081526013602090815260408083208151608081018352815480825260018301549482019490945260028201546001600160a01b0316928101929092526003015460608201529042108015906118205750805161181c90622e248090612dce565b4211155b91505090565b600b546001600160a01b036101009091041633146118565760405162461bcd60e51b815260040161096190612d45565b610e97611f6c565b600b546001600160a01b0361010090910416331461188e5760405162461bcd60e51b815260040161096190612d45565b600d81905560405181907fa6dc15bdb68da224c66db4b3838d9a2b205138e8cff6774e57d0af91e196d62290600090a250565b60606001805461086990612e60565b61104e338383611fc4565b6000818152600260205260409020546060906001600160a01b031661195a5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610961565b6000611964612093565b9050600081511161198457604051806020016040528060008152506119af565b8061198e846120a2565b60405160200161199f929190612be7565b6040516020818303038152906040525b9392505050565b600b546001600160a01b036101009091041633146119e65760405162461bcd60e51b815260040161096190612d45565b600081815260146020526040808220805460ff191660011790555182917f289f515c9c4dcd7a19f8c217f529f632785054b6c4a850bb3385c032bf055cd891a250565b6060611a33612093565b604051602001611a439190612c16565b604051602081830303815290604052905090565b6000818152600260205260408120546001600160a01b0316611acc5760405162461bcd60e51b815260206004820152602860248201527f4552433732314e6f6e5472616e7366657261626c653a204e6f6e657869737465604482015267373a103a37b5b2b760c11b6064820152608401610961565b506000908152600a602052604090205490565b600b546001600160a01b03610100909104163314611b0f5760405162461bcd60e51b815260040161096190612d45565b6001600160a01b038116611b745760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610961565b610f7581611de2565b60006001600160e01b0319821663780e9d6360e01b14806108545750610854826121a0565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611bd782611052565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600b5460ff16611c595760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610961565b600b805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000818152600260205260408120546001600160a01b0316611d1c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610961565b6000611d2783611052565b9050806001600160a01b0316846001600160a01b03161480611d625750836001600160a01b0316611d57846108ec565b6001600160a01b0316145b80611d9257506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b611da3816121f0565b6000818152600a602052604090205415610f75576000908152600a6020526040812055565b61104e828260405180602001604052806000815250612297565b600b80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080517f660378436788f39f9fc46ae7f7f66a86ee2190d67c73a201fbfd272a060d520260208201526001600160a01b038816918101919091526060810186905260808101859052600090819060a00160408051601f1981840301815290829052805160209182012061190160f01b918301919091527f0000000000000000000000000000000000000000000000000000000000000000602283015260428201819052915060009060620160408051601f198184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015611f53573d6000803e3d6000fd5b5050604051601f1901519b9a5050505050505050505050565b600b5460ff1615611f8f5760405162461bcd60e51b815260040161096190612d1b565b600b805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611c863390565b816001600160a01b0316836001600160a01b031614156120265760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610961565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60606015805461086990612e60565b6060816120c65750506040805180820190915260018152600360fc1b602082015290565b8160005b81156120f057806120da81612e9b565b91506120e99050600a83612de6565b91506120ca565b60008167ffffffffffffffff81111561210b5761210b612f22565b6040519080825280601f01601f191660200182016040528015612135576020820181803683370190505b5090505b8415611d925761214a600183612e19565b9150612157600a86612eb6565b612162906030612dce565b60f81b81838151811061217757612177612f0c565b60200101906001600160f81b031916908160001a905350612199600a86612de6565b9450612139565b60006001600160e01b031982166380ac58cd60e01b14806121d157506001600160e01b03198216635b5e139f60e01b145b8061085457506301ffc9a760e01b6001600160e01b0319831614610854565b60006121fb82611052565b9050612209816000846122ca565b612214600083611ba2565b6001600160a01b038116600090815260036020526040812080546001929061223d908490612e19565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6122a183836122f8565b6122ae6000848484612446565b610a975760405162461bcd60e51b815260040161096190612cc9565b600b5460ff16156122ed5760405162461bcd60e51b815260040161096190612d1b565b610a97838383612553565b6001600160a01b03821661234e5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610961565b6000818152600260205260409020546001600160a01b0316156123b35760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610961565b6123bf600083836122ca565b6001600160a01b03821660009081526003602052604081208054600192906123e8908490612dce565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b1561254857604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061248a903390899088908890600401612c42565b602060405180830381600087803b1580156124a457600080fd5b505af19250505080156124d4575060408051601f3d908101601f191682019092526124d191810190612ae7565b60015b61252e573d808015612502576040519150601f19603f3d011682016040523d82523d6000602084013e612507565b606091505b5080516125265760405162461bcd60e51b815260040161096190612cc9565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611d92565b506001949350505050565b610a978383836001600160a01b0383166125b4576125af81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6125d7565b816001600160a01b0316836001600160a01b0316146125d7576125d78382612611565b6001600160a01b0382166125ee57610a97816126ae565b826001600160a01b0316826001600160a01b031614610a9757610a97828261275d565b6000600161261e84611381565b6126289190612e19565b60008381526007602052604090205490915080821461267b576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906126c090600190612e19565b600083815260096020526040812054600880549394509092849081106126e8576126e8612f0c565b90600052602060002001549050806008838154811061270957612709612f0c565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061274157612741612ef6565b6001900381819060005260206000200160009055905550505050565b600061276883611381565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b8280546127ad90612e60565b90600052602060002090601f0160209004810192826127cf5760008555612815565b82601f106127e857805160ff1916838001178555612815565b82800160010185558215612815579182015b828111156128155782518255916020019190600101906127fa565b50612821929150612825565b5090565b5b808211156128215760008155600101612826565b600067ffffffffffffffff8084111561285557612855612f22565b604051601f8501601f19908116603f0116810190828211818310171561287d5761287d612f22565b8160405280935085815286868601111561289657600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b03811681146128c757600080fd5b919050565b600082601f8301126128dd57600080fd5b6119af8383356020850161283a565b803561ffff811681146128c757600080fd5b60006020828403121561291057600080fd5b6119af826128b0565b6000806040838503121561292c57600080fd5b612935836128b0565b9150612943602084016128b0565b90509250929050565b60008060006060848603121561296157600080fd5b61296a846128b0565b9250612978602085016128b0565b9150604084013590509250925092565b6000806000806080858703121561299e57600080fd5b6129a7856128b0565b93506129b5602086016128b0565b925060408501359150606085013567ffffffffffffffff8111156129d857600080fd5b8501601f810187136129e957600080fd5b6129f88782356020840161283a565b91505092959194509250565b60008060408385031215612a1757600080fd5b612a20836128b0565b915060208301358015158114612a3557600080fd5b809150509250929050565b60008060008060008060c08789031215612a5957600080fd5b612a62876128b0565b95506020870135945060408701359350606087013560ff81168114612a8657600080fd5b9598949750929560808101359460a0909101359350915050565b60008060408385031215612ab357600080fd5b612abc836128b0565b946020939093013593505050565b600060208284031215612adc57600080fd5b81356119af81612f38565b600060208284031215612af957600080fd5b81516119af81612f38565b600060208284031215612b1657600080fd5b813567ffffffffffffffff811115612b2d57600080fd5b611d92848285016128cc565b600060208284031215612b4b57600080fd5b6119af826128ec565b60008060408385031215612b6757600080fd5b612b70836128ec565b9150602083013567ffffffffffffffff811115612b8c57600080fd5b612b98858286016128cc565b9150509250929050565b600060208284031215612bb457600080fd5b5035919050565b60008151808452612bd3816020860160208601612e30565b601f01601f19169290920160200192915050565b60008351612bf9818460208801612e30565b835190830190612c0d818360208801612e30565b01949350505050565b60008251612c28818460208701612e30565b6718dbdb9d1c9858dd60c21b920191825250600801919050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612c7590830184612bbb565b9695505050505050565b6001600160a01b038416815261ffff83166020820152606060408201819052600090612cad90830184612bbb565b95945050505050565b6020815260006119af6020830184612bbb565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600061ffff808316818516808303821115612c0d57612c0d612eca565b60008219821115612de157612de1612eca565b500190565b600082612df557612df5612ee0565b500490565b6000816000190483118215151615612e1457612e14612eca565b500290565b600082821015612e2b57612e2b612eca565b500390565b60005b83811015612e4b578181015183820152602001612e33565b83811115612e5a576000848401525b50505050565b600181811c90821680612e7457607f821691505b60208210811415612e9557634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415612eaf57612eaf612eca565b5060010190565b600082612ec557612ec5612ee0565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610f7557600080fdfea264697066735822122029e3e53cec84a114f2290f2ba5940bf3b92d8826c1a8995bc231f6397e6ba75364736f6c63430008070033";

type ProofOfResidencyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProofOfResidencyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProofOfResidency__factory extends ContractFactory {
  constructor(...args: ProofOfResidencyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    initialCommitter: string,
    initialTreasury: string,
    initialBaseUri: string,
    initialPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProofOfResidency> {
    return super.deploy(
      initialCommitter,
      initialTreasury,
      initialBaseUri,
      initialPrice,
      overrides || {}
    ) as Promise<ProofOfResidency>;
  }
  getDeployTransaction(
    initialCommitter: string,
    initialTreasury: string,
    initialBaseUri: string,
    initialPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialCommitter,
      initialTreasury,
      initialBaseUri,
      initialPrice,
      overrides || {}
    );
  }
  attach(address: string): ProofOfResidency {
    return super.attach(address) as ProofOfResidency;
  }
  connect(signer: Signer): ProofOfResidency__factory {
    return super.connect(signer) as ProofOfResidency__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProofOfResidencyInterface {
    return new utils.Interface(_abi) as ProofOfResidencyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProofOfResidency {
    return new Contract(address, _abi, signerOrProvider) as ProofOfResidency;
  }
}
