/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProofOfResidency,
  ProofOfResidencyInterface,
} from "../ProofOfResidency";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialCommitter",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialTreasury",
        type: "address",
      },
      {
        internalType: "string",
        name: "initialBaseUri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "committer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "CommitmentCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "committer",
        type: "address",
      },
    ],
    name: "CommitterAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "committer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fundsLost",
        type: "uint256",
      },
    ],
    name: "CommitterRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "PriceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenChallengeCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenChallenged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newCommitter",
        type: "address",
      },
    ],
    name: "addCommitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "burnFailedChallenges",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "unclaimedAddresses",
        type: "address[]",
      },
    ],
    name: "claimExpiredContributions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "commitAddress",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "commitmentPeriodIsUpcoming",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "commitmentPeriodIsValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "uint256",
        name: "validAt",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "committer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "committerContributions",
    outputs: [
      {
        internalType: "uint256",
        name: "lockedUntil",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "countryTokenCounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "country",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "commitment",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projectTreasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "removedCommitter",
        type: "address",
      },
    ],
    name: "removeCommitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reservePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "country",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "commitment",
        type: "string",
      },
    ],
    name: "respondToChallenge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseUri",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "setProjectTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokenChallengeExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokenChallengeExpired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162003c7c38038062003c7c833981016040819052620000349162000394565b604080518082018252601b81527f50726f6f66206f66205265736964656e63792050726f746f636f6c00000000006020808301918252835180850190945260048452630504f52560e41b908401528151919291839183916200009991600091620002d1565b508051620000af906001906020840190620002d1565b5050600a805460ff1916905550620000cb9150339050620001dd565b6001600b55600d80546001600160a01b0319166001600160a01b038516179055600c819055815162000105906014906020850190620002d1565b506001600160a01b0384166000908152600f60205260409020805460ff191660011790557f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6200015462000237565b805160209182012060408051808201825260018152603160f81b90840152805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160408051601f19818403018152919052805160209091012060805250620004f192505050565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60606000805462000248906200049e565b80601f016020809104026020016040519081016040528092919081815260200182805462000276906200049e565b8015620002c75780601f106200029b57610100808354040283529160200191620002c7565b820191906000526020600020905b815481529060010190602001808311620002a957829003601f168201915b5050505050905090565b828054620002df906200049e565b90600052602060002090601f0160209004810192826200030357600085556200034e565b82601f106200031e57805160ff19168380011785556200034e565b828001600101855582156200034e579182015b828111156200034e57825182559160200191906001019062000331565b506200035c92915062000360565b5090565b5b808211156200035c576000815560010162000361565b80516001600160a01b03811681146200038f57600080fd5b919050565b60008060008060808587031215620003ab57600080fd5b620003b68562000377565b93506020620003c781870162000377565b60408701519094506001600160401b0380821115620003e557600080fd5b818801915088601f830112620003fa57600080fd5b8151818111156200040f576200040f620004db565b604051601f8201601f19908116603f011681019083821181831017156200043a576200043a620004db565b816040528281528b868487010111156200045357600080fd5b600093505b8284101562000477578484018601518185018701529285019262000458565b82841115620004895760008684830101525b60609a909a0151989b979a5050505050505050565b600181811c90821680620004b357607f821691505b60208210811415620004d557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805161376f6200050d6000396000611a9c015261376f6000f3fe60806040526004361061027d5760003560e01c806370a082311161014f578063b52831e3116100c1578063d17547d31161007a578063d17547d3146107f6578063db2e1eed14610816578063e8a3d4851461082c578063e8fcf72314610841578063e985e9c5146108be578063f2fde38b1461090757600080fd5b8063b52831e31461071f578063b73efec514610732578063b80722791461077b578063b88d4fde1461079b578063c3d0c459146107b6578063c87b56dd146107d657600080fd5b806391b7f5ed1161011357806391b7f5ed1461065d578063922a6e451461067d57806393c6ad321461069d57806395d89b41146106ca57806398fa2248146106df578063a22cb465146106ff57600080fd5b806370a08231146105c3578063715018a6146105e35780637ecebe00146105f85780638456cb59146106255780638da5cb5b1461063a57600080fd5b806334702f03116101f35780634f6ccce7116101ac5780634f6ccce7146104f357806355f804b3146105135780635c8934d2146105335780635c975abb1461056b5780636352211e146105835780636a1db9f7146105a357600080fd5b806334702f0314610407578063363896b4146104275780633ccfd60b146104895780633f4ba83a1461049e57806342842e0e146104b357806342966c68146104d357600080fd5b80631664891a116102455780631664891a1461034857806318160ddd146103685780631e96bb9e1461038757806323b872dd146103a757806326fe0f12146103c75780632f745c59146103e757600080fd5b806301ffc9a71461028257806306fdde03146102b7578063081812fc146102d9578063095ea7b314610311578063144bb68b14610333575b600080fd5b34801561028e57600080fd5b506102a261029d366004613242565b610927565b60405190151581526020015b60405180910390f35b3480156102c357600080fd5b506102cc610938565b6040516102ae919061348d565b3480156102e557600080fd5b506102f96102f436600461331a565b6109ca565b6040516001600160a01b0390911681526020016102ae565b34801561031d57600080fd5b5061033161032c366004613164565b610a64565b005b34801561033f57600080fd5b506102a2610b7a565b34801561035457600080fd5b506102a2610363366004612fcc565b610be8565b34801561037457600080fd5b506008545b6040519081526020016102ae565b34801561039357600080fd5b506103316103a2366004612fcc565b610c29565b3480156103b357600080fd5b506103316103c236600461301a565b610c7b565b3480156103d357600080fd5b506103316103e236600461318e565b610cdb565b3480156103f357600080fd5b50610379610402366004613164565b610e8f565b34801561041357600080fd5b50610331610422366004612fcc565b610f25565b34801561043357600080fd5b50336000908152601160209081526040918290208251608081018452815480825260018301549382019390935260028201546001600160a01b0316938101939093526003015460609092019190915242106102a2565b34801561049557600080fd5b50610331611031565b3480156104aa57600080fd5b5061033161128b565b3480156104bf57600080fd5b506103316104ce36600461301a565b6112c5565b3480156104df57600080fd5b506103316104ee36600461331a565b611329565b3480156104ff57600080fd5b5061037961050e36600461331a565b6113a4565b34801561051f57600080fd5b5061033161052e36600461327c565b611437565b34801561053f57600080fd5b506102a261054e366004612fcc565b6001600160a01b0316600090815260136020526040902054151590565b34801561057757600080fd5b50600a5460ff166102a2565b34801561058f57600080fd5b506102f961059e36600461331a565b61147a565b3480156105af57600080fd5b506103796105be3660046132cc565b6114f1565b3480156105cf57600080fd5b506103796105de366004612fcc565b61165f565b3480156105ef57600080fd5b506103316116e6565b34801561060457600080fd5b50610379610613366004612fcc565b60126020526000908152604090205481565b34801561063157600080fd5b50610331611720565b34801561064657600080fd5b50600a5461010090046001600160a01b03166102f9565b34801561066957600080fd5b5061033161067836600461331a565b611758565b34801561068957600080fd5b50610331610698366004612fcc565b6117bb565b3480156106a957600080fd5b506103796106b83660046132b1565b600e6020526000908152604090205481565b3480156106d657600080fd5b506102cc611837565b3480156106eb57600080fd5b506102a26106fa366004613333565b611846565b34801561070b57600080fd5b5061033161071a3660046130d2565b6119d9565b61033161072d36600461310e565b6119e4565b34801561073e57600080fd5b5061076661074d366004612fcc565b6010602052600090815260409020805460019091015482565b604080519283526020830191909152016102ae565b34801561078757600080fd5b5061033161079636600461318e565b611d53565b3480156107a757600080fd5b506103316104ce366004613056565b3480156107c257600080fd5b50600d546102f9906001600160a01b031681565b3480156107e257600080fd5b506102cc6107f136600461331a565b611f19565b34801561080257600080fd5b5061033161081136600461318e565b611ff4565b34801561082257600080fd5b50610379600c5481565b34801561083857600080fd5b506102cc612109565b34801561084d57600080fd5b5061088f61085c366004612fcc565b6011602052600090815260409020805460018201546002830154600390930154919290916001600160a01b039091169084565b6040516102ae949392919093845260208401929092526001600160a01b03166040830152606082015260800190565b3480156108ca57600080fd5b506102a26108d9366004612fe7565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561091357600080fd5b50610331610922366004612fcc565b612137565b6000610932826121d5565b92915050565b6060600080546109479061364b565b80601f01602080910402602001604051908101604052809291908181526020018280546109739061364b565b80156109c05780601f10610995576101008083540402835291602001916109c0565b820191906000526020600020905b8154815290600101906020018083116109a357829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610a485760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610a6f8261147a565b9050806001600160a01b0316836001600160a01b03161415610add5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610a3f565b336001600160a01b0382161480610af95750610af981336108d9565b610b6b5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610a3f565b610b7583836121fa565b505050565b3360009081526011602090815260408083208151608081018352815480825260018301549482019490945260028201546001600160a01b031692810192909252600301546060820152904210801590610be257508051610bde90622e2480906135b9565b4211155b91505090565b6001600160a01b038116600090815260136020526040812054151580156109325750506001600160a01b031660009081526013602052604090205442101590565b600a546001600160a01b03610100909104163314610c595760405162461bcd60e51b8152600401610a3f9061351c565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b60405162461bcd60e51b815260206004820152602f60248201527f4552433732314e6f6e5472616e7366657261626c653a207472616e736665724660448201526e1c9bdb481b9bdd08185b1b1bddd959608a1b6064820152608401610a3f565b600a546001600160a01b03610100909104163314610d0b5760405162461bcd60e51b8152600401610a3f9061351c565b60005b8151811015610e8b57610d39828281518110610d2c57610d2c6136f7565b6020026020010151610be8565b610d7d5760405162461bcd60e51b815260206004820152601560248201527410da185b1b195b99d9481b9bdd08195e1c1a5c9959605a1b6044820152606401610a3f565b6000610da3838381518110610d9457610d946136f7565b60200260200101516000610e8f565b9050600060116000858581518110610dbd57610dbd6136f7565b6020908102919091018101516001600160a01b0390811683528282019390935260409182016000208251608081018452815481526001820154928101929092526002810154909316918101829052600390920154606083015290915015610e6d576040808201516001600160a01b031660009081526010602052908120606083015160018201805492939192909190610e579084906135b9565b90915550610e6a905062093a80426135b9565b90555b610e7682612268565b50508080610e8390613686565b915050610d0e565b5050565b6000610e9a8361165f565b8210610efc5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610a3f565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a546001600160a01b03610100909104163314610f555760405162461bcd60e51b8152600401610a3f9061351c565b6001600160a01b038082166000908152600f60209081526040808320805460ff1916905560108083528184208251808401845281548152600191820154818601908152600d54909716865291909352908320935191840180549194939091610fbe9084906135b9565b90915550610fd1905062093a80426135b9565b81556001600160a01b0383166000818152601060209081526040808320838155600101929092558481015191519182527fba5e85a32191ad7530b1992d2854820c9955d43eee2d89d98ddbd0c7ba93e631910160405180910390a2505050565b6002600b5414156110545760405162461bcd60e51b8152600401610a3f90613551565b6002600b5533600090815260106020908152604091829020825180840190935280548084526001909101549183019190915242116110c15760405162461bcd60e51b815260206004820152600a602482015269151a5b595b1bd8dad95960b21b6044820152606401610a3f565b60006064601483602001516110d691906135e5565b6110e091906135d1565b9050600081116111235760405162461bcd60e51b815260206004820152600e60248201526d0546178206e6f74206f76657220360941b6044820152606401610a3f565b33600090815260106020526040808220828155600101829055600d5490516001600160a01b039091169083908381818185875af1925050503d8060008114611187576040519150601f19603f3d011682016040523d82523d6000602084013e61118c565b606091505b50509050806111dd5760405162461bcd60e51b815260206004820152601f60248201527f556e61626c6520746f2073656e642070726f6a656374207472656173757279006044820152606401610a3f565b6000336001600160a01b03168385602001516111f99190613604565b604051600081818185875af1925050503d8060008114611235576040519150601f19603f3d011682016040523d82523d6000602084013e61123a565b606091505b50509050806112805760405162461bcd60e51b8152602060048201526012602482015271556e61626c6520746f20776974686472617760701b6044820152606401610a3f565b50506001600b555050565b600a546001600160a01b036101009091041633146112bb5760405162461bcd60e51b8152600401610a3f9061351c565b6112c361230f565b565b60405162461bcd60e51b815260206004820152603360248201527f4552433732314e6f6e5472616e7366657261626c653a20736166655472616e7360448201527219995c919c9bdb481b9bdd08185b1b1bddd959606a1b6064820152608401610a3f565b61133333826123a2565b6113985760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b6064820152608401610a3f565b6113a181612268565b50565b60006113af60085490565b82106114125760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610a3f565b60088281548110611425576114256136f7565b90600052602060002001549050919050565b600a546001600160a01b036101009091041633146114675760405162461bcd60e51b8152600401610a3f9061351c565b8051610e8b906014906020840190612e8d565b6000818152600260205260408120546001600160a01b0316806109325760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610a3f565b60006114ff600a5460ff1690565b1561151c5760405162461bcd60e51b8152600401610a3f906134f2565b6002600b54141561153f5760405162461bcd60e51b8152600401610a3f90613551565b6002600b5561154d3361165f565b1561158f5760405162461bcd60e51b815260206004820152601260248201527120b63932b0b23c9037bbb739903a37b5b2b760711b6044820152606401610a3f565b600061159b8484612499565b6040808201516001600160a01b031660009081526010602052908120606083015160018201805494955091939092906115d59084906135b9565b909155506115e8905062093a80426135b9565b815561ffff85166000908152600e6020526040812080546001929061160e9084906135b9565b909155505061ffff85166000818152600e6020526040812054909161163b9066038d7ea4c68000906135e5565b61164591906135b9565b90506116513382612686565b6001600b5595945050505050565b60006001600160a01b0382166116ca5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610a3f565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b036101009091041633146117165760405162461bcd60e51b8152600401610a3f9061351c565b6112c360006126a0565b600a546001600160a01b036101009091041633146117505760405162461bcd60e51b8152600401610a3f9061351c565b6112c36126fa565b600a546001600160a01b036101009091041633146117885760405162461bcd60e51b8152600401610a3f9061351c565b600c81905560405181907fa6dc15bdb68da224c66db4b3838d9a2b205138e8cff6774e57d0af91e196d62290600090a250565b600a546001600160a01b036101009091041633146117eb5760405162461bcd60e51b8152600401610a3f9061351c565b6001600160a01b0381166000818152600f6020526040808220805460ff19166001179055517f77b15bf1925eb6403cdcd3a6b7df1451a6e970b6c273dd573b3b5335fef5a7f99190a250565b6060600180546109479061364b565b6000611854600a5460ff1690565b156118715760405162461bcd60e51b8152600401610a3f906134f2565b6002600b5414156118945760405162461bcd60e51b8152600401610a3f90613551565b6002600b5561ffff83166118af66038d7ea4c68000866135d1565b146118f05760405162461bcd60e51b815260206004820152601160248201527010dbdd5b9d1c9e481b9bdd081d985b1a59607a1b6044820152606401610a3f565b60006118fc8484612499565b336000818152601360205260408082208290555192935087927f86772781b40574f0ea7e9cb9068f0995a6ce9d59670a4563205747115cd6d42e9190a3606081015160405160009133918381818185875af1925050503d806000811461197e576040519150601f19603f3d011682016040523d82523d6000602084013e611983565b606091505b50509050806119c75760405162461bcd60e51b815260206004820152601060248201526f155b98589b19481d1bc81c99599d5b9960821b6044820152606401610a3f565b6001925050506001600b559392505050565b610e8b338383612752565b600a5460ff1615611a075760405162461bcd60e51b8152600401610a3f906134f2565b6001600160a01b0385166000908152601260209081526040808320549051611a74927fb91dfcf0a8a93d828d341c3f973ee8aba0b4387c636e55a55eddb70c4988866a928a928a92019384526001600160a01b039290921660208401526040830152606082015260800190565b60408051601f1981840301815290829052805160209182012061190160f01b918301919091527f0000000000000000000000000000000000000000000000000000000000000000602283015260428201819052915060009060620160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611b3a573d6000803e3d6000fd5b505060408051601f1901516001600160a01b0381166000908152600f602052919091205490925060ff169050611bb25760405162461bcd60e51b815260206004820152601760248201527f5369676e61746f7279206e6f6e2d636f6d6d69747465720000000000000000006044820152606401610a3f565b600c543414611bf55760405162461bcd60e51b815260206004820152600f60248201526e496e636f72726563742076616c756560881b6044820152606401610a3f565b6001600160a01b03881660009081526011602052604081208054909190611c2090622e2480906135b9565b4211905081600101546000801b1480611c365750805b611c785760405162461bcd60e51b8152602060048201526013602482015272115e1a5cdd1a5b99c818dbdb5b5a5d1b595b9d606a1b6044820152606401610a3f565b8015611ccb57600d546001600160a01b03166000908152601060205260408120600384015460018201805492939192909190611cb59084906135b9565b90915550611cc8905062093a80426135b9565b90555b6002820180546001600160a01b0319166001600160a01b038516179055611cf562093a80426135b9565b8255600182018990553460038301556040518981526001600160a01b0384811691908c16907fffaf5ade9a72747e20b851f075f08e02c2586f9e4aec537be3fad850c040e2679060200160405180910390a350505050505050505050565b600a546001600160a01b03610100909104163314611d835760405162461bcd60e51b8152600401610a3f9061351c565b6000805b8251811015611ed057600060116000858481518110611da857611da86136f7565b6020908102919091018101516001600160a01b0390811683528282019390935260409182016000208251608081018452815480825260018301549382019390935260028201549094169284019290925260039091015460608301529091504290611e1690622e2480906135b9565b10611e515760405162461bcd60e51b815260206004820152600b60248201526a14dd1a5b1b081d985b1a5960aa1b6044820152606401610a3f565b6060810151611e6090846135b9565b925060116000858481518110611e7857611e786136f7565b6020908102919091018101516001600160a01b031682528101919091526040016000908120818155600181018290556002810180546001600160a01b0319169055600301555080611ec881613686565b915050611d87565b50600d546001600160a01b0316600090815260106020526040812060018101805491928492611f009084906135b9565b90915550611f13905062093a80426135b9565b90555050565b6000818152600260205260409020546060906001600160a01b0316611f985760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610a3f565b6000611fa2612821565b90506000815111611fc25760405180602001604052806000815250611fed565b80611fcc84612830565b604051602001611fdd9291906133b6565b6040516020818303038152906040525b9392505050565b600a546001600160a01b036101009091041633146120245760405162461bcd60e51b8152600401610a3f9061351c565b60005b8151811015610e8b576000612047838381518110610d9457610d946136f7565b9050622e248061205a62093a80426135b9565b61206491906135b9565b6013600085858151811061207a5761207a6136f7565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002081905550808383815181106120b9576120b96136f7565b60200260200101516001600160a01b03167ffb435e2b911f412494cf70b593bfce6da7199bffeff5e9030de6870bd3daadeb60405160405180910390a3508061210181613686565b915050612027565b6060612113612821565b60405160200161212391906133e5565b604051602081830303815290604052905090565b600a546001600160a01b036101009091041633146121675760405162461bcd60e51b8152600401610a3f9061351c565b6001600160a01b0381166121cc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a3f565b6113a1816126a0565b60006001600160e01b0319821663780e9d6360e01b148061093257506109328261292e565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061222f8261147a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006122738261147a565b90506122818160008461297e565b61228c6000836121fa565b6001600160a01b03811660009081526003602052604081208054600192906122b5908490613604565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600a5460ff166123585760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610a3f565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000818152600260205260408120546001600160a01b031661241b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610a3f565b60006124268361147a565b9050806001600160a01b0316846001600160a01b031614806124615750836001600160a01b0316612456846109ca565b6001600160a01b0316145b8061249157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b60408051608080820183526000808352602080840182905283850182905260609384018290523380835260118252858320865194850187528054855260018101548584015260028101546001600160a01b03168588015260030154948401949094528382526012815290849020549351919361251b939287928792910161344e565b6040516020818303038152906040528051906020012081602001511461257a5760405162461bcd60e51b815260206004820152601460248201527310dbdb5b5a5d1b595b9d081a5b98dbdc9c9958dd60621b6044820152606401610a3f565b612582610b7a565b6125ce5760405162461bcd60e51b815260206004820152601960248201527f436f6d6d69746d656e7420706572696f6420696e76616c6964000000000000006044820152606401610a3f565b6040808201516001600160a01b03166000908152600f602052205460ff1661262c5760405162461bcd60e51b815260206004820152601160248201527014da59db985d1bdc9e481c995b5bdd9959607a1b6044820152606401610a3f565b33600090815260126020526040812080546001929061264c9084906135b9565b9091555050336000908152601160205260408120818155600181018290556002810180546001600160a01b03191690556003015592915050565b610e8b8282604051806020016040528060008152506129ac565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600a5460ff161561271d5760405162461bcd60e51b8152600401610a3f906134f2565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586123853390565b816001600160a01b0316836001600160a01b031614156127b45760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610a3f565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6060601480546109479061364b565b6060816128545750506040805180820190915260018152600360fc1b602082015290565b8160005b811561287e578061286881613686565b91506128779050600a836135d1565b9150612858565b60008167ffffffffffffffff8111156128995761289961370d565b6040519080825280601f01601f1916602001820160405280156128c3576020820181803683370190505b5090505b8415612491576128d8600183613604565b91506128e5600a866136a1565b6128f09060306135b9565b60f81b818381518110612905576129056136f7565b60200101906001600160f81b031916908160001a905350612927600a866135d1565b94506128c7565b60006001600160e01b031982166380ac58cd60e01b148061295f57506001600160e01b03198216635b5e139f60e01b145b8061093257506301ffc9a760e01b6001600160e01b0319831614610932565b600a5460ff16156129a15760405162461bcd60e51b8152600401610a3f906134f2565b610b758383836129df565b6129b683836129ea565b6129c36000848484612b38565b610b755760405162461bcd60e51b8152600401610a3f906134a0565b610b75838383612c45565b6001600160a01b038216612a405760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610a3f565b6000818152600260205260409020546001600160a01b031615612aa55760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610a3f565b612ab16000838361297e565b6001600160a01b0382166000908152600360205260408120805460019290612ada9084906135b9565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b15612c3a57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612b7c903390899088908890600401613411565b602060405180830381600087803b158015612b9657600080fd5b505af1925050508015612bc6575060408051601f3d908101601f19168201909252612bc39181019061325f565b60015b612c20573d808015612bf4576040519150601f19603f3d011682016040523d82523d6000602084013e612bf9565b606091505b508051612c185760405162461bcd60e51b8152600401610a3f906134a0565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612491565b506001949350505050565b6001600160a01b038316612ca057612c9b81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b612cc3565b816001600160a01b0316836001600160a01b031614612cc357612cc38382612cfd565b6001600160a01b038216612cda57610b7581612d9a565b826001600160a01b0316826001600160a01b031614610b7557610b758282612e49565b60006001612d0a8461165f565b612d149190613604565b600083815260076020526040902054909150808214612d67576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090612dac90600190613604565b60008381526009602052604081205460088054939450909284908110612dd457612dd46136f7565b906000526020600020015490508060088381548110612df557612df56136f7565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480612e2d57612e2d6136e1565b6001900381819060005260206000200160009055905550505050565b6000612e548361165f565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054612e999061364b565b90600052602060002090601f016020900481019282612ebb5760008555612f01565b82601f10612ed457805160ff1916838001178555612f01565b82800160010185558215612f01579182015b82811115612f01578251825591602001919060010190612ee6565b50612f0d929150612f11565b5090565b5b80821115612f0d5760008155600101612f12565b600067ffffffffffffffff831115612f4057612f4061370d565b612f53601f8401601f1916602001613588565b9050828152838383011115612f6757600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b0381168114612f9557600080fd5b919050565b600082601f830112612fab57600080fd5b611fed83833560208501612f26565b803561ffff81168114612f9557600080fd5b600060208284031215612fde57600080fd5b611fed82612f7e565b60008060408385031215612ffa57600080fd5b61300383612f7e565b915061301160208401612f7e565b90509250929050565b60008060006060848603121561302f57600080fd5b61303884612f7e565b925061304660208501612f7e565b9150604084013590509250925092565b6000806000806080858703121561306c57600080fd5b61307585612f7e565b935061308360208601612f7e565b925060408501359150606085013567ffffffffffffffff8111156130a657600080fd5b8501601f810187136130b757600080fd5b6130c687823560208401612f26565b91505092959194509250565b600080604083850312156130e557600080fd5b6130ee83612f7e565b91506020830135801515811461310357600080fd5b809150509250929050565b600080600080600060a0868803121561312657600080fd5b61312f86612f7e565b945060208601359350604086013560ff8116811461314c57600080fd5b94979396509394606081013594506080013592915050565b6000806040838503121561317757600080fd5b61318083612f7e565b946020939093013593505050565b600060208083850312156131a157600080fd5b823567ffffffffffffffff808211156131b957600080fd5b818501915085601f8301126131cd57600080fd5b8135818111156131df576131df61370d565b8060051b91506131f0848301613588565b8181528481019084860184860187018a101561320b57600080fd5b600095505b838610156132355761322181612f7e565b835260019590950194918601918601613210565b5098975050505050505050565b60006020828403121561325457600080fd5b8135611fed81613723565b60006020828403121561327157600080fd5b8151611fed81613723565b60006020828403121561328e57600080fd5b813567ffffffffffffffff8111156132a557600080fd5b61249184828501612f9a565b6000602082840312156132c357600080fd5b611fed82612fba565b600080604083850312156132df57600080fd5b6132e883612fba565b9150602083013567ffffffffffffffff81111561330457600080fd5b61331085828601612f9a565b9150509250929050565b60006020828403121561332c57600080fd5b5035919050565b60008060006060848603121561334857600080fd5b8335925061335860208501612fba565b9150604084013567ffffffffffffffff81111561337457600080fd5b61338086828701612f9a565b9150509250925092565b600081518084526133a281602086016020860161361b565b601f01601f19169290920160200192915050565b600083516133c881846020880161361b565b8351908301906133dc81836020880161361b565b01949350505050565b600082516133f781846020870161361b565b6718dbdb9d1c9858dd60c21b920191825250600801919050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906134449083018461338a565b9695505050505050565b6001600160a01b038516815261ffff8416602082015260806040820181905260009061347c9083018561338a565b905082606083015295945050505050565b602081526000611fed602083018461338a565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b604051601f8201601f1916810167ffffffffffffffff811182821017156135b1576135b161370d565b604052919050565b600082198211156135cc576135cc6136b5565b500190565b6000826135e0576135e06136cb565b500490565b60008160001904831182151516156135ff576135ff6136b5565b500290565b600082821015613616576136166136b5565b500390565b60005b8381101561363657818101518382015260200161361e565b83811115613645576000848401525b50505050565b600181811c9082168061365f57607f821691505b6020821081141561368057634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561369a5761369a6136b5565b5060010190565b6000826136b0576136b06136cb565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146113a157600080fdfea2646970667358221220b0da565f38777abb3e2d2439d3d1b121b3e8eacfc2046b77f2fde617b0cf7e7464736f6c63430008070033";

type ProofOfResidencyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProofOfResidencyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProofOfResidency__factory extends ContractFactory {
  constructor(...args: ProofOfResidencyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ProofOfResidency";
  }

  deploy(
    initialCommitter: string,
    initialTreasury: string,
    initialBaseUri: string,
    initialPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProofOfResidency> {
    return super.deploy(
      initialCommitter,
      initialTreasury,
      initialBaseUri,
      initialPrice,
      overrides || {}
    ) as Promise<ProofOfResidency>;
  }
  getDeployTransaction(
    initialCommitter: string,
    initialTreasury: string,
    initialBaseUri: string,
    initialPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialCommitter,
      initialTreasury,
      initialBaseUri,
      initialPrice,
      overrides || {}
    );
  }
  attach(address: string): ProofOfResidency {
    return super.attach(address) as ProofOfResidency;
  }
  connect(signer: Signer): ProofOfResidency__factory {
    return super.connect(signer) as ProofOfResidency__factory;
  }
  static readonly contractName: "ProofOfResidency";
  public readonly contractName: "ProofOfResidency";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProofOfResidencyInterface {
    return new utils.Interface(_abi) as ProofOfResidencyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProofOfResidency {
    return new Contract(address, _abi, signerOrProvider) as ProofOfResidency;
  }
}
