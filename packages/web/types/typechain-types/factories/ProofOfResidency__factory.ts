/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProofOfResidency,
  ProofOfResidencyInterface,
} from "../ProofOfResidency";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialCommitter",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialTreasury",
        type: "address",
      },
      {
        internalType: "string",
        name: "initialBaseUri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "committer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "mailingAddressId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "CommitmentCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "committer",
        type: "address",
      },
    ],
    name: "CommitterAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "committer",
        type: "address",
      },
    ],
    name: "CommitterRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "blacklistedAddress",
        type: "uint256",
      },
    ],
    name: "MailingAddressBlacklisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "PriceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newCommitter",
        type: "address",
      },
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "addCommitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mailingAddressId",
        type: "uint256",
      },
    ],
    name: "blacklistMailingAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "hashedMailingAddress",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "commitAddress",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "countryTokenCounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCommitment",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "validAt",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "commitment",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "committer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct ProofOfResidency.Commitment",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCommitmentPeriodIsUpcoming",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCommitmentPeriodIsValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "mailingAddressCounts",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "country",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "publicKey",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projectTreasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "removedCommitter",
        type: "address",
      },
    ],
    name: "removeCommitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reservePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseUri",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "setProjectTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620034a8380380620034a883398101604081905262000034916200039f565b604080518082018252601b81527f50726f6f66206f66205265736964656e63792050726f746f636f6c00000000006020808301918252835180850190945260048452630504f52560e41b908401528151919291839183916200009991600091620002dc565b508051620000af906001906020840190620002dc565b5050600a805460ff1916905550620000cb9150339050620001e8565b6001600b55600d80546001600160a01b0319166001600160a01b038516179055600c819055815162000105906015906020850190620002dc565b506001600160a01b03848116600090815260106020526040902080546001600160a01b0319169185169190911790557f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6200015f62000242565b805160209182012060408051808201825260018152603160f81b90840152805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160408051601f19818403018152919052805160209091012060805250620004fc92505050565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6060600080546200025390620004a9565b80601f01602080910402602001604051908101604052809291908181526020018280546200028190620004a9565b8015620002d25780601f10620002a657610100808354040283529160200191620002d2565b820191906000526020600020905b815481529060010190602001808311620002b457829003601f168201915b5050505050905090565b828054620002ea90620004a9565b90600052602060002090601f0160209004810192826200030e576000855562000359565b82601f106200032957805160ff191683800117855562000359565b8280016001018555821562000359579182015b82811115620003595782518255916020019190600101906200033c565b50620003679291506200036b565b5090565b5b808211156200036757600081556001016200036c565b80516001600160a01b03811681146200039a57600080fd5b919050565b60008060008060808587031215620003b657600080fd5b620003c18562000382565b93506020620003d281870162000382565b60408701519094506001600160401b0380821115620003f057600080fd5b818801915088601f8301126200040557600080fd5b8151818111156200041a576200041a620004e6565b604051601f8201601f19908116603f01168101908382118183101715620004455762000445620004e6565b816040528281528b868487010111156200045e57600080fd5b600093505b8284101562000482578484018601518185018701529285019262000463565b82841115620004945760008684830101525b60609a909a0151989b979a5050505050505050565b600181811c90821680620004be57607f821691505b60208210811415620004e057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b608051612f90620005186000396000611f520152612f906000f3fe6080604052600436106102465760003560e01c806370a082311161013957806395d89b41116100b6578063c87b56dd1161007a578063c87b56dd14610782578063db2e1eed146107a2578063dcd2a602146107b8578063e8a3d485146107d8578063e985e9c5146107ed578063f2fde38b1461083657600080fd5b806395d89b41146106ce578063a22cb465146106e3578063b88d4fde14610703578063bf1264561461071e578063c3d0c4591461076257600080fd5b80637ecebe00116100fd5780637ecebe001461061c5780638456cb59146106495780638da5cb5b1461065e57806391b7f5ed1461068157806393c6ad32146106a157600080fd5b806370a082311461059f578063715018a6146105bf578063752edb9d146105d4578063792dfbeb146105f457806379702a0f1461060757600080fd5b80633ccfd60b116101c75780634f6ccce71161018b5780634f6ccce71461050757806355f804b3146105275780635c975abb146105475780636352211e1461055f5780636a1db9f71461057f57600080fd5b80633ccfd60b1461043a5780633f4ba83a1461044f57806342842e0e1461046457806342966c68146104845780634509034f146104a457600080fd5b80631e96bb9e1161020e5780631e96bb9e1461031b57806323b872dd1461033b5780632a79c6111461035b5780632f745c59146103fa57806334702f031461041a57600080fd5b806301ffc9a71461024b57806306fdde0314610280578063081812fc146102a2578063095ea7b3146102da57806318160ddd146102fc575b600080fd5b34801561025757600080fd5b5061026b610266366004612ace565b610856565b60405190151581526020015b60405180910390f35b34801561028c57600080fd5b50610295610867565b6040516102779190612cc2565b3480156102ae57600080fd5b506102c26102bd366004612ba6565b6108f9565b6040516001600160a01b039091168152602001610277565b3480156102e657600080fd5b506102fa6102f5366004612aa4565b610993565b005b34801561030857600080fd5b506008545b604051908152602001610277565b34801561032757600080fd5b506102fa610336366004612902565b610aa9565b34801561034757600080fd5b506102fa610356366004612950565b610b41565b34801561036757600080fd5b5060408051608080820183526000808352602080840182905283850182905260609384018290523382526012815290849020845180840186528154808252600183015482850190815260028401546001600160a01b03908116848a019081526003909501549388019384528851928352905194820194909452915190921694810194909452519183019190915201610277565b34801561040657600080fd5b5061030d610415366004612aa4565b610ba1565b34801561042657600080fd5b506102fa610435366004612902565b610c37565b34801561044657600080fd5b506102fa610cb6565b34801561045b57600080fd5b506102fa610eb2565b34801561047057600080fd5b506102fa61047f366004612950565b610eec565b34801561049057600080fd5b506102fa61049f366004612ba6565b610f50565b3480156104b057600080fd5b50336000908152601260209081526040918290208251608081018452815480825260018301549382019390935260028201546001600160a01b0316938101939093526003015460609092019190915242111561026b565b34801561051357600080fd5b5061030d610522366004612ba6565b610fcb565b34801561053357600080fd5b506102fa610542366004612b08565b61105e565b34801561055357600080fd5b50600a5460ff1661026b565b34801561056b57600080fd5b506102c261057a366004612ba6565b6110a5565b34801561058b57600080fd5b5061030d61059a366004612b58565b61111c565b3480156105ab57600080fd5b5061030d6105ba366004612902565b6113e8565b3480156105cb57600080fd5b506102fa61146f565b3480156105e057600080fd5b506102fa6105ef36600461291d565b6114a9565b6102fa610602366004612a44565b611534565b34801561061357600080fd5b5061026b611828565b34801561062857600080fd5b5061030d610637366004612902565b60146020526000908152604090205481565b34801561065557600080fd5b506102fa611896565b34801561066a57600080fd5b50600a5461010090046001600160a01b03166102c2565b34801561068d57600080fd5b506102fa61069c366004612ba6565b6118ce565b3480156106ad57600080fd5b5061030d6106bc366004612b3d565b600f6020526000908152604090205481565b3480156106da57600080fd5b50610295611931565b3480156106ef57600080fd5b506102fa6106fe366004612a08565b611940565b34801561070f57600080fd5b506102fa61047f36600461298c565b34801561072a57600080fd5b5061074f610739366004612ba6565b600e6020526000908152604090205461ffff1681565b60405161ffff9091168152602001610277565b34801561076e57600080fd5b50600d546102c2906001600160a01b031681565b34801561078e57600080fd5b5061029561079d366004612ba6565b61194b565b3480156107ae57600080fd5b5061030d600c5481565b3480156107c457600080fd5b506102fa6107d3366004612ba6565b611a26565b3480156107e457600080fd5b50610295611a99565b3480156107f957600080fd5b5061026b61080836600461291d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561084257600080fd5b506102fa610851366004612902565b611ac7565b600061086182611b65565b92915050565b60606000805461087690612e6c565b80601f01602080910402602001604051908101604052809291908181526020018280546108a290612e6c565b80156108ef5780601f106108c4576101008083540402835291602001916108ef565b820191906000526020600020905b8154815290600101906020018083116108d257829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166109775760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061099e826110a5565b9050806001600160a01b0316836001600160a01b03161415610a0c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161096e565b336001600160a01b0382161480610a285750610a288133610808565b610a9a5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161096e565b610aa48383611b8a565b505050565b600a546001600160a01b03610100909104163314610ad95760405162461bcd60e51b815260040161096e90612d51565b6001600160a01b038116610b1f5760405162461bcd60e51b815260206004820152600d60248201526c4e6f6e2d30206164647265737360981b604482015260640161096e565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b60405162461bcd60e51b815260206004820152602f60248201527f4552433732314e6f6e5472616e7366657261626c653a207472616e736665724660448201526e1c9bdb481b9bdd08185b1b1bddd959608a1b606482015260840161096e565b6000610bac836113e8565b8210610c0e5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161096e565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a546001600160a01b03610100909104163314610c675760405162461bcd60e51b815260040161096e90612d51565b6001600160a01b03811660008181526010602052604080822080546001600160a01b0319169055517f117c88ce0db1154655f2e289ef1695d90636689127cff2dd8090af544cf6c2b79190a250565b6002600b541415610cd95760405162461bcd60e51b815260040161096e90612d86565b6002600b5533600090815260116020526040812054906064610cfc601484612e06565b610d069190612df2565b905060008111610d495760405162461bcd60e51b815260206004820152600e60248201526d0546178206e6f74206f76657220360941b604482015260640161096e565b33600090815260116020526040808220829055600d5490516001600160a01b039091169083908381818185875af1925050503d8060008114610da7576040519150601f19603f3d011682016040523d82523d6000602084013e610dac565b606091505b5050905080610dfd5760405162461bcd60e51b815260206004820152601f60248201527f556e61626c6520746f2073656e642070726f6a65637420747265617375727900604482015260640161096e565b336000908152601060205260408120546001600160a01b0316610e208486612e25565b604051600081818185875af1925050503d8060008114610e5c576040519150601f19603f3d011682016040523d82523d6000602084013e610e61565b606091505b5050905080610ea75760405162461bcd60e51b8152602060048201526012602482015271556e61626c6520746f20776974686472617760701b604482015260640161096e565b50506001600b555050565b600a546001600160a01b03610100909104163314610ee25760405162461bcd60e51b815260040161096e90612d51565b610eea611bf8565b565b60405162461bcd60e51b815260206004820152603360248201527f4552433732314e6f6e5472616e7366657261626c653a20736166655472616e7360448201527219995c919c9bdb481b9bdd08185b1b1bddd959606a1b606482015260840161096e565b610f5a3382611c8b565b610fbf5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b606482015260840161096e565b610fc881611d82565b50565b6000610fd660085490565b82106110395760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161096e565b6008828154811061104c5761104c612f18565b90600052602060002001549050919050565b600a546001600160a01b0361010090910416331461108e5760405162461bcd60e51b815260040161096e90612d51565b80516110a19060159060208401906127a5565b5050565b6000818152600260205260408120546001600160a01b0316806108615760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161096e565b600061112a600a5460ff1690565b156111475760405162461bcd60e51b815260040161096e90612d27565b6002600b54141561116a5760405162461bcd60e51b815260040161096e90612d86565b6002600b819055336000818152601260209081526040808320815160808101835281548152600182015481850152958101546001600160a01b03168683015260030154606086015283835260148252918290205491516111cf93928892889201612c83565b6040516020818303038152906040528051906020012081602001511461122e5760405162461bcd60e51b815260206004820152601460248201527310dbdb5b5a5d1b595b9d081a5b98dbdc9c9958dd60621b604482015260640161096e565b611237336113e8565b156112795760405162461bcd60e51b815260206004820152601260248201527120b63932b0b23c9037bbb739903a37b5b2b760711b604482015260640161096e565b80514210156112bc5760405162461bcd60e51b815260206004820152600f60248201526e10d85b9b9bdd081b5a5b9d081e595d608a1b604482015260640161096e565b80516112cc90622e248090612dda565b4211156113055760405162461bcd60e51b8152602060048201526007602482015266115e1c1a5c995960ca1b604482015260640161096e565b61130e33611e29565b60608101516040808301516001600160a01b031660009081526011602052908120805490919061133f908490612dda565b909155505061ffff84166000908152600f60205260408120805460019290611368908490612dda565b909155505061ffff84166000818152600f602052604081205490916113959066038d7ea4c6800090612e06565b61139f9190612dda565b336000818152601260205260408120818155600181018290556002810180546001600160a01b0319169055600301559091506113db9082611e5a565b6001600b55949350505050565b60006001600160a01b0382166114535760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161096e565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b0361010090910416331461149f5760405162461bcd60e51b815260040161096e90612d51565b610eea6000611e74565b600a546001600160a01b036101009091041633146114d95760405162461bcd60e51b815260040161096e90612d51565b6001600160a01b0382811660008181526010602052604080822080546001600160a01b03191694861694909417909355915190917f77b15bf1925eb6403cdcd3a6b7df1451a6e970b6c273dd573b3b5335fef5a7f991a25050565b600a5460ff16156115575760405162461bcd60e51b815260040161096e90612d27565b6002600b54141561157a5760405162461bcd60e51b815260040161096e90612d86565b6002600b55600061158f878787878787611ece565b6001600160a01b03808216600090815260106020526040902054919250166115f95760405162461bcd60e51b815260206004820152601760248201527f5369676e61746f7279206e6f6e2d636f6d6d6974746572000000000000000000604482015260640161096e565b61160233611e29565b600c5434146116455760405162461bcd60e51b815260206004820152600f60248201526e496e636f72726563742076616c756560881b604482015260640161096e565b61164e876113e8565b156116895760405162461bcd60e51b815260206004820152600b60248201526a2737b71698103a37b5b2b760a91b604482015260640161096e565b600085815260136020526040902054859060ff16156116e05760405162461bcd60e51b81526020600482015260136024820152721059191c995cdcc8189b1858dadb1a5cdd1959606a1b604482015260640161096e565b6000818152600e6020526040812080546001929061170390849061ffff16612dbd565b825461ffff9182166101009390930a9283029190920219909116179055506001600160a01b0388166000908152601260205260409020600181015415806117585750805461175590622e248090612dda565b42115b61179a5760405162461bcd60e51b8152602060048201526013602482015272115e1a5cdd1a5b99c818dbdb5b5a5d1b595b9d606a1b604482015260640161096e565b6002810180546001600160a01b0319166001600160a01b0385161790556117c462093a8042612dda565b81556001810188905534600382015560405188815282906001600160a01b0385811691908c16907ffacfb4f8f6a97950a243d2b59a9d270cede18185ffdc705c945bd13657e1bd0f9060200160405180910390a450506001600b5550505050505050565b3360009081526012602090815260408083208151608081018352815480825260018301549482019490945260028201546001600160a01b0316928101929092526003015460608201529042108015906118905750805161188c90622e248090612dda565b4211155b91505090565b600a546001600160a01b036101009091041633146118c65760405162461bcd60e51b815260040161096e90612d51565b610eea612012565b600a546001600160a01b036101009091041633146118fe5760405162461bcd60e51b815260040161096e90612d51565b600c81905560405181907fa6dc15bdb68da224c66db4b3838d9a2b205138e8cff6774e57d0af91e196d62290600090a250565b60606001805461087690612e6c565b6110a133838361206a565b6000818152600260205260409020546060906001600160a01b03166119ca5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161096e565b60006119d4612139565b905060008151116119f45760405180602001604052806000815250611a1f565b806119fe84612148565b604051602001611a0f929190612beb565b6040516020818303038152906040525b9392505050565b600a546001600160a01b03610100909104163314611a565760405162461bcd60e51b815260040161096e90612d51565b600081815260136020526040808220805460ff191660011790555182917f289f515c9c4dcd7a19f8c217f529f632785054b6c4a850bb3385c032bf055cd891a250565b6060611aa3612139565b604051602001611ab39190612c1a565b604051602081830303815290604052905090565b600a546001600160a01b03610100909104163314611af75760405162461bcd60e51b815260040161096e90612d51565b6001600160a01b038116611b5c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161096e565b610fc881611e74565b60006001600160e01b0319821663780e9d6360e01b1480610861575061086182612246565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611bbf826110a5565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600a5460ff16611c415760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161096e565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000818152600260205260408120546001600160a01b0316611d045760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161096e565b6000611d0f836110a5565b9050806001600160a01b0316846001600160a01b03161480611d4a5750836001600160a01b0316611d3f846108f9565b6001600160a01b0316145b80611d7a57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b6000611d8d826110a5565b9050611d9b81600084612296565b611da6600083611b8a565b6001600160a01b0381166000908152600360205260408120805460019290611dcf908490612e25565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b0381166000908152601460205260408120805460019290611e52908490612dda565b909155505050565b6110a18282604051806020016040528060008152506122c4565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03861660008181526014602090815260408083205481517f0d74f9dcf07d4e1809238c6bb7a460e147e1035979be1c366a7a068b3236d3908185015280830195909552606085018a90526080850189905260a0808601919091528151808603909101815260c08501825280519083012061190160f01b60e08601527f000000000000000000000000000000000000000000000000000000000000000060e286015261010280860182905282518087039091018152610122860180845281519185019190912090859052610142860180845281905260ff891661016287015261018286018890526101a28601879052915193949093919285926001926101c28082019392601f1981019281900390910190855afa158015611ff9573d6000803e3d6000fd5b5050604051601f1901519b9a5050505050505050505050565b600a5460ff16156120355760405162461bcd60e51b815260040161096e90612d27565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611c6e3390565b816001600160a01b0316836001600160a01b031614156120cc5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161096e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60606015805461087690612e6c565b60608161216c5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612196578061218081612ea7565b915061218f9050600a83612df2565b9150612170565b60008167ffffffffffffffff8111156121b1576121b1612f2e565b6040519080825280601f01601f1916602001820160405280156121db576020820181803683370190505b5090505b8415611d7a576121f0600183612e25565b91506121fd600a86612ec2565b612208906030612dda565b60f81b81838151811061221d5761221d612f18565b60200101906001600160f81b031916908160001a90535061223f600a86612df2565b94506121df565b60006001600160e01b031982166380ac58cd60e01b148061227757506001600160e01b03198216635b5e139f60e01b145b8061086157506301ffc9a760e01b6001600160e01b0319831614610861565b600a5460ff16156122b95760405162461bcd60e51b815260040161096e90612d27565b610aa48383836122f7565b6122ce8383612302565b6122db6000848484612450565b610aa45760405162461bcd60e51b815260040161096e90612cd5565b610aa483838361255d565b6001600160a01b0382166123585760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161096e565b6000818152600260205260409020546001600160a01b0316156123bd5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161096e565b6123c960008383612296565b6001600160a01b03821660009081526003602052604081208054600192906123f2908490612dda565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b1561255257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612494903390899088908890600401612c46565b602060405180830381600087803b1580156124ae57600080fd5b505af19250505080156124de575060408051601f3d908101601f191682019092526124db91810190612aeb565b60015b612538573d80801561250c576040519150601f19603f3d011682016040523d82523d6000602084013e612511565b606091505b5080516125305760405162461bcd60e51b815260040161096e90612cd5565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611d7a565b506001949350505050565b6001600160a01b0383166125b8576125b381600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6125db565b816001600160a01b0316836001600160a01b0316146125db576125db8382612615565b6001600160a01b0382166125f257610aa4816126b2565b826001600160a01b0316826001600160a01b031614610aa457610aa48282612761565b60006001612622846113e8565b61262c9190612e25565b60008381526007602052604090205490915080821461267f576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906126c490600190612e25565b600083815260096020526040812054600880549394509092849081106126ec576126ec612f18565b90600052602060002001549050806008838154811061270d5761270d612f18565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061274557612745612f02565b6001900381819060005260206000200160009055905550505050565b600061276c836113e8565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b8280546127b190612e6c565b90600052602060002090601f0160209004810192826127d35760008555612819565b82601f106127ec57805160ff1916838001178555612819565b82800160010185558215612819579182015b828111156128195782518255916020019190600101906127fe565b50612825929150612829565b5090565b5b80821115612825576000815560010161282a565b600067ffffffffffffffff8084111561285957612859612f2e565b604051601f8501601f19908116603f0116810190828211818310171561288157612881612f2e565b8160405280935085815286868601111561289a57600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b03811681146128cb57600080fd5b919050565b600082601f8301126128e157600080fd5b611a1f8383356020850161283e565b803561ffff811681146128cb57600080fd5b60006020828403121561291457600080fd5b611a1f826128b4565b6000806040838503121561293057600080fd5b612939836128b4565b9150612947602084016128b4565b90509250929050565b60008060006060848603121561296557600080fd5b61296e846128b4565b925061297c602085016128b4565b9150604084013590509250925092565b600080600080608085870312156129a257600080fd5b6129ab856128b4565b93506129b9602086016128b4565b925060408501359150606085013567ffffffffffffffff8111156129dc57600080fd5b8501601f810187136129ed57600080fd5b6129fc8782356020840161283e565b91505092959194509250565b60008060408385031215612a1b57600080fd5b612a24836128b4565b915060208301358015158114612a3957600080fd5b809150509250929050565b60008060008060008060c08789031215612a5d57600080fd5b612a66876128b4565b95506020870135945060408701359350606087013560ff81168114612a8a57600080fd5b9598949750929560808101359460a0909101359350915050565b60008060408385031215612ab757600080fd5b612ac0836128b4565b946020939093013593505050565b600060208284031215612ae057600080fd5b8135611a1f81612f44565b600060208284031215612afd57600080fd5b8151611a1f81612f44565b600060208284031215612b1a57600080fd5b813567ffffffffffffffff811115612b3157600080fd5b611d7a848285016128d0565b600060208284031215612b4f57600080fd5b611a1f826128f0565b60008060408385031215612b6b57600080fd5b612b74836128f0565b9150602083013567ffffffffffffffff811115612b9057600080fd5b612b9c858286016128d0565b9150509250929050565b600060208284031215612bb857600080fd5b5035919050565b60008151808452612bd7816020860160208601612e3c565b601f01601f19169290920160200192915050565b60008351612bfd818460208801612e3c565b835190830190612c11818360208801612e3c565b01949350505050565b60008251612c2c818460208701612e3c565b6718dbdb9d1c9858dd60c21b920191825250600801919050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612c7990830184612bbf565b9695505050505050565b6001600160a01b038516815261ffff84166020820152608060408201819052600090612cb190830185612bbf565b905082606083015295945050505050565b602081526000611a1f6020830184612bbf565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600061ffff808316818516808303821115612c1157612c11612ed6565b60008219821115612ded57612ded612ed6565b500190565b600082612e0157612e01612eec565b500490565b6000816000190483118215151615612e2057612e20612ed6565b500290565b600082821015612e3757612e37612ed6565b500390565b60005b83811015612e57578181015183820152602001612e3f565b83811115612e66576000848401525b50505050565b600181811c90821680612e8057607f821691505b60208210811415612ea157634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415612ebb57612ebb612ed6565b5060010190565b600082612ed157612ed1612eec565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610fc857600080fdfea264697066735822122046d45e3c6844f4ba10611a0b89a8442ccd29d432d40269bbde767f9a4295885964736f6c63430008070033";

type ProofOfResidencyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProofOfResidencyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProofOfResidency__factory extends ContractFactory {
  constructor(...args: ProofOfResidencyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ProofOfResidency";
  }

  deploy(
    initialCommitter: string,
    initialTreasury: string,
    initialBaseUri: string,
    initialPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProofOfResidency> {
    return super.deploy(
      initialCommitter,
      initialTreasury,
      initialBaseUri,
      initialPrice,
      overrides || {}
    ) as Promise<ProofOfResidency>;
  }
  getDeployTransaction(
    initialCommitter: string,
    initialTreasury: string,
    initialBaseUri: string,
    initialPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialCommitter,
      initialTreasury,
      initialBaseUri,
      initialPrice,
      overrides || {}
    );
  }
  attach(address: string): ProofOfResidency {
    return super.attach(address) as ProofOfResidency;
  }
  connect(signer: Signer): ProofOfResidency__factory {
    return super.connect(signer) as ProofOfResidency__factory;
  }
  static readonly contractName: "ProofOfResidency";
  public readonly contractName: "ProofOfResidency";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProofOfResidencyInterface {
    return new utils.Interface(_abi) as ProofOfResidencyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProofOfResidency {
    return new Contract(address, _abi, signerOrProvider) as ProofOfResidency;
  }
}
