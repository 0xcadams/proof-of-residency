/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProofOfResidency,
  ProofOfResidencyInterface,
} from "../ProofOfResidency";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialCommitter",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialTreasury",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
    ],
    name: "CommitmentCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "commitAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "committer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "country",
        type: "uint256",
      },
    ],
    name: "currentCountryCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "country",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "secret",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newCommitter",
        type: "address",
      },
    ],
    name: "setCommitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200276538038062002765833981016040819052620000349162000225565b604080518082018252601b81527f50726f6f66206f66205265736964656e63792050726f746f636f6c00000000006020808301918252835180850190945260048452630504f52560e41b90840152815191929183918391620000999160009162000162565b508051620000af90600190602084019062000162565b5050600a805460ff1916905550620000cb915033905062000108565b600d80546001600160a01b039384166001600160a01b031991821617909155600c8054929093169116179055661c6bf526340000600b556200029a565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000170906200025d565b90600052602060002090601f016020900481019282620001945760008555620001df565b82601f10620001af57805160ff1916838001178555620001df565b82800160010185558215620001df579182015b82811115620001df578251825591602001919060010190620001c2565b50620001ed929150620001f1565b5090565b5b80821115620001ed5760008155600101620001f2565b80516001600160a01b03811681146200022057600080fd5b919050565b600080604083850312156200023957600080fd5b620002448362000208565b9150620002546020840162000208565b90509250929050565b600181811c908216806200027257607f821691505b602082108114156200029457634e487b7160e01b600052602260045260246000fd5b50919050565b6124bb80620002aa6000396000f3fe6080604052600436106101f95760003560e01c80636817c76c1161010d578063a22cb465116100a0578063dd51ce221161006f578063dd51ce221461058e578063e8a3d485146105ae578063e985e9c5146105c3578063f0f442601461060c578063f2fde38b1461062c57600080fd5b8063a22cb46514610506578063b6227b6514610526578063b88d4fde14610553578063c87b56dd1461056e57600080fd5b80638456cb59116100dc5780638456cb59146104995780638da5cb5b146104ae57806391b7f5ed146104d157806395d89b41146104f157600080fd5b80636817c76c1461043b57806370a0823114610451578063715018a61461047157806377097fc81461048657600080fd5b80633f4ba83a116101905780635bc8e8f91161015f5780635bc8e8f9146103a35780635c975abb146103c357806361d027b3146103db5780636352211e146103fb578063661406821461041b57600080fd5b80633f4ba83a1461032e57806342842e0e1461034357806342966c68146103635780634f6ccce71461038357600080fd5b806318160ddd116101cc57806318160ddd146102af57806323b872dd146102ce5780632e1a7d4d146102ee5780632f745c591461030e57600080fd5b806301ffc9a7146101fe57806306fdde0314610233578063081812fc14610255578063095ea7b31461028d575b600080fd5b34801561020a57600080fd5b5061021e61021936600461205c565b61064c565b60405190151581526020015b60405180910390f35b34801561023f57600080fd5b5061024861065d565b60405161022a91906121fe565b34801561026157600080fd5b50610275610270366004612096565b6106ef565b6040516001600160a01b03909116815260200161022a565b34801561029957600080fd5b506102ad6102a8366004612032565b610789565b005b3480156102bb57600080fd5b506008545b60405190815260200161022a565b3480156102da57600080fd5b506102ad6102e9366004611f3e565b61089f565b3480156102fa57600080fd5b506102ad610309366004612096565b6108f8565b34801561031a57600080fd5b506102c0610329366004612032565b610a3a565b34801561033a57600080fd5b506102ad610ad0565b34801561034f57600080fd5b506102ad61035e366004611f3e565b610b0a565b34801561036f57600080fd5b506102ad61037e366004612096565b610b67565b34801561038f57600080fd5b506102c061039e366004612096565b610be2565b3480156103af57600080fd5b50600d54610275906001600160a01b031681565b3480156103cf57600080fd5b50600a5460ff1661021e565b3480156103e757600080fd5b50600c54610275906001600160a01b031681565b34801561040757600080fd5b50610275610416366004612096565b610c75565b34801561042757600080fd5b506102ad610436366004612032565b610cec565b34801561044757600080fd5b506102c0600b5481565b34801561045d57600080fd5b506102c061046c366004611ef0565b610e37565b34801561047d57600080fd5b506102ad610ebe565b6102c06104943660046120af565b610ef8565b3480156104a557600080fd5b506102ad6110b4565b3480156104ba57600080fd5b50600a5461010090046001600160a01b0316610275565b3480156104dd57600080fd5b506102ad6104ec366004612096565b6110ec565b3480156104fd57600080fd5b50610248611121565b34801561051257600080fd5b506102ad610521366004611ff6565b611130565b34801561053257600080fd5b506102c0610541366004612096565b6000908152600f602052604090205490565b34801561055f57600080fd5b506102ad61035e366004611f7a565b34801561057a57600080fd5b50610248610589366004612096565b61113b565b34801561059a57600080fd5b506102ad6105a9366004611ef0565b611216565b3480156105ba57600080fd5b50610248611268565b3480156105cf57600080fd5b5061021e6105de366004611f0b565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561061857600080fd5b506102ad610627366004611ef0565b611296565b34801561063857600080fd5b506102ad610647366004611ef0565b6112e8565b600061065782611386565b92915050565b60606000805461066c90612354565b80601f016020809104026020016040519081016040528092919081815260200182805461069890612354565b80156106e55780601f106106ba576101008083540402835291602001916106e5565b820191906000526020600020905b8154815290600101906020018083116106c857829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661076d5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061079482610c75565b9050806001600160a01b0316836001600160a01b031614156108025760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610764565b336001600160a01b038216148061081e575061081e81336105de565b6108905760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610764565b61089a83836113ab565b505050565b60405162461bcd60e51b815260206004820152602860248201527f455243373231526561644f6e6c793a207472616e7366657246726f6d206e6f7460448201526708185b1b1bddd95960c21b6064820152608401610764565b600a546001600160a01b036101009091041633146109285760405162461bcd60e51b81526004016107649061228d565b80601154601054610939919061230d565b10156109875760405162461bcd60e51b815260206004820152601f60248201527f5769746864726177616c20616d6f756e74206e6f7420617661696c61626c65006044820152606401610764565b806011600082825461099991906122c2565b9091555050600c546040516000916001600160a01b03169083908381818185875af1925050503d80600081146109eb576040519150601f19603f3d011682016040523d82523d6000602084013e6109f0565b606091505b5050905080610a365760405162461bcd60e51b8152602060048201526012602482015271556e61626c6520746f20776974686472617760701b6044820152606401610764565b5050565b6000610a4583610e37565b8210610aa75760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610764565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a546001600160a01b03610100909104163314610b005760405162461bcd60e51b81526004016107649061228d565b610b08611419565b565b60405162461bcd60e51b815260206004820152602c60248201527f455243373231526561644f6e6c793a20736166655472616e7366657246726f6d60448201526b081b9bdd08185b1b1bddd95960a21b6064820152608401610764565b610b7133826114ac565b610bd65760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b6064820152608401610764565b610bdf8161159f565b50565b6000610bed60085490565b8210610c505760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610764565b60088281548110610c6357610c63612400565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806106575760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610764565b600a5460ff1615610d0f5760405162461bcd60e51b815260040161076490612263565b600d546001600160a01b03163314610d695760405162461bcd60e51b815260206004820152601b60248201527f43616c6c6572206973206e6f742074686520636f6d6d697474657200000000006044820152606401610764565b6001600160a01b0382166000908152600e6020526040902060018101541580610d925750805442115b610dde5760405162461bcd60e51b815260206004820152601f60248201527f4164647265737320686173206578697374696e6720636f6d6d69746d656e74006044820152606401610764565b610deb42626ebe006122c2565b8155600181018290556040518281526001600160a01b038416907f51cd26749f65ff5d5cb3ded2ea7e2489087813b9d9bda12fc5925c6665b924429060200160405180910390a2505050565b60006001600160a01b038216610ea25760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610764565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b03610100909104163314610eee5760405162461bcd60e51b81526004016107649061228d565b610b086000611646565b6000610f06600a5460ff1690565b15610f235760405162461bcd60e51b815260040161076490612263565b336000908152600e60205260409020600b543414610f785760405162461bcd60e51b8152602060048201526012602482015271125b98dbdc9c9958dd08115512081cd95b9d60721b6044820152606401610764565b338484604051602001610f8d939291906121ce565b60405160208183030381529060405280519060200120816001015414610ff55760405162461bcd60e51b815260206004820152601760248201527f436f6d6d69746d656e7420697320696e636f72726563740000000000000000006044820152606401610764565b805442111561103b5760405162461bcd60e51b8152602060048201526012602482015271151a5b59481b1a5b5a5d081c995858da195960721b6044820152606401610764565b346010600082825461104d91906122c2565b90915550506000848152600f602052604081208054600192906110719084906122c2565b90915550506000848152600f602052604081205461109666038d7ea4c68000876122ee565b6110a091906122c2565b90506110ac33826116a0565b949350505050565b600a546001600160a01b036101009091041633146110e45760405162461bcd60e51b81526004016107649061228d565b610b086116ba565b600a546001600160a01b0361010090910416331461111c5760405162461bcd60e51b81526004016107649061228d565b600b55565b60606001805461066c90612354565b610a36338383611712565b6000818152600260205260409020546060906001600160a01b03166111ba5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610764565b60006111c46117e1565b905060008151116111e4576040518060200160405280600081525061120f565b806111ee84611801565b6040516020016111ff929190612136565b6040516020818303038152906040525b9392505050565b600a546001600160a01b036101009091041633146112465760405162461bcd60e51b81526004016107649061228d565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b60606112726117e1565b6040516020016112829190612165565b604051602081830303815290604052905090565b600a546001600160a01b036101009091041633146112c65760405162461bcd60e51b81526004016107649061228d565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b600a546001600160a01b036101009091041633146113185760405162461bcd60e51b81526004016107649061228d565b6001600160a01b03811661137d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610764565b610bdf81611646565b60006001600160e01b0319821663780e9d6360e01b14806106575750610657826118ff565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906113e082610c75565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600a5460ff166114625760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610764565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000818152600260205260408120546001600160a01b03166115255760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610764565b600061153083610c75565b9050806001600160a01b0316846001600160a01b0316148061156b5750836001600160a01b0316611560846106ef565b6001600160a01b0316145b806110ac57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff166110ac565b60006115aa82610c75565b90506115b88160008461194f565b6115c36000836113ab565b6001600160a01b03811660009081526003602052604081208054600192906115ec90849061230d565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610a3682826040518060200160405280600081525061197d565b600a5460ff16156116dd5760405162461bcd60e51b815260040161076490612263565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861148f3390565b816001600160a01b0316836001600160a01b031614156117745760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610764565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b606060405180608001604052806043815260200161244360439139905090565b6060816118255750506040805180820190915260018152600360fc1b602082015290565b8160005b811561184f57806118398161238f565b91506118489050600a836122da565b9150611829565b60008167ffffffffffffffff81111561186a5761186a612416565b6040519080825280601f01601f191660200182016040528015611894576020820181803683370190505b5090505b84156110ac576118a960018361230d565b91506118b6600a866123aa565b6118c19060306122c2565b60f81b8183815181106118d6576118d6612400565b60200101906001600160f81b031916908160001a9053506118f8600a866122da565b9450611898565b60006001600160e01b031982166380ac58cd60e01b148061193057506001600160e01b03198216635b5e139f60e01b145b8061065757506301ffc9a760e01b6001600160e01b0319831614610657565b600a5460ff16156119725760405162461bcd60e51b815260040161076490612263565b61089a8383836119b0565b61198783836119bb565b6119946000848484611b09565b61089a5760405162461bcd60e51b815260040161076490612211565b61089a838383611c16565b6001600160a01b038216611a115760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610764565b6000818152600260205260409020546001600160a01b031615611a765760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610764565b611a826000838361194f565b6001600160a01b0382166000908152600360205260408120805460019290611aab9084906122c2565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b15611c0b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611b4d903390899088908890600401612191565b602060405180830381600087803b158015611b6757600080fd5b505af1925050508015611b97575060408051601f3d908101601f19168201909252611b9491810190612079565b60015b611bf1573d808015611bc5576040519150601f19603f3d011682016040523d82523d6000602084013e611bca565b606091505b508051611be95760405162461bcd60e51b815260040161076490612211565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506110ac565b506001949350505050565b6001600160a01b038316611c7157611c6c81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611c94565b816001600160a01b0316836001600160a01b031614611c9457611c948382611cce565b6001600160a01b038216611cab5761089a81611d6b565b826001600160a01b0316826001600160a01b03161461089a5761089a8282611e1a565b60006001611cdb84610e37565b611ce5919061230d565b600083815260076020526040902054909150808214611d38576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611d7d9060019061230d565b60008381526009602052604081205460088054939450909284908110611da557611da5612400565b906000526020600020015490508060088381548110611dc657611dc6612400565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611dfe57611dfe6123ea565b6001900381819060005260206000200160009055905550505050565b6000611e2583610e37565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b600067ffffffffffffffff80841115611e7957611e79612416565b604051601f8501601f19908116603f01168101908282118183101715611ea157611ea1612416565b81604052809350858152868686011115611eba57600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114611eeb57600080fd5b919050565b600060208284031215611f0257600080fd5b61120f82611ed4565b60008060408385031215611f1e57600080fd5b611f2783611ed4565b9150611f3560208401611ed4565b90509250929050565b600080600060608486031215611f5357600080fd5b611f5c84611ed4565b9250611f6a60208501611ed4565b9150604084013590509250925092565b60008060008060808587031215611f9057600080fd5b611f9985611ed4565b9350611fa760208601611ed4565b925060408501359150606085013567ffffffffffffffff811115611fca57600080fd5b8501601f81018713611fdb57600080fd5b611fea87823560208401611e5e565b91505092959194509250565b6000806040838503121561200957600080fd5b61201283611ed4565b91506020830135801515811461202757600080fd5b809150509250929050565b6000806040838503121561204557600080fd5b61204e83611ed4565b946020939093013593505050565b60006020828403121561206e57600080fd5b813561120f8161242c565b60006020828403121561208b57600080fd5b815161120f8161242c565b6000602082840312156120a857600080fd5b5035919050565b600080604083850312156120c257600080fd5b82359150602083013567ffffffffffffffff8111156120e057600080fd5b8301601f810185136120f157600080fd5b61210085823560208401611e5e565b9150509250929050565b60008151808452612122816020860160208601612324565b601f01601f19169290920160200192915050565b60008351612148818460208801612324565b83519083019061215c818360208801612324565b01949350505050565b60008251612177818460208701612324565b6718dbdb9d1c9858dd60c21b920191825250600801919050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906121c49083018461210a565b9695505050505050565b60018060a01b03841681528260208201526060604082015260006121f5606083018461210a565b95945050505050565b60208152600061120f602083018461210a565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156122d5576122d56123be565b500190565b6000826122e9576122e96123d4565b500490565b6000816000190483118215151615612308576123086123be565b500290565b60008282101561231f5761231f6123be565b500390565b60005b8381101561233f578181015183820152602001612327565b8381111561234e576000848401525b50505050565b600181811c9082168061236857607f821691505b6020821081141561238957634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156123a3576123a36123be565b5060010190565b6000826123b9576123b96123d4565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610bdf57600080fdfe697066733a2f2f62616679626569687262693667687278636b647a6c69747570776e787a69636f637266657571716f61766b747870376f727577326262656a6468752fa26469706673582212208fb537fa9c3ed9e2e6b59eb20a690abbe3e84c9787459a7193bc2b54df360cd864736f6c63430008070033";

type ProofOfResidencyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProofOfResidencyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProofOfResidency__factory extends ContractFactory {
  constructor(...args: ProofOfResidencyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    initialCommitter: string,
    initialTreasury: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProofOfResidency> {
    return super.deploy(
      initialCommitter,
      initialTreasury,
      overrides || {}
    ) as Promise<ProofOfResidency>;
  }
  getDeployTransaction(
    initialCommitter: string,
    initialTreasury: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialCommitter,
      initialTreasury,
      overrides || {}
    );
  }
  attach(address: string): ProofOfResidency {
    return super.attach(address) as ProofOfResidency;
  }
  connect(signer: Signer): ProofOfResidency__factory {
    return super.connect(signer) as ProofOfResidency__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProofOfResidencyInterface {
    return new utils.Interface(_abi) as ProofOfResidencyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProofOfResidency {
    return new Contract(address, _abi, signerOrProvider) as ProofOfResidency;
  }
}
